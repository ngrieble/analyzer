<!DOCTYPE html>
<html lang="en">
<head>

  <!-- BOOTSCROLLER premium Bootstrap html5 template v 1.0.0.
  ArtLabs 2013 - http://www.sitediscount.ru
  ####### Released under GNU GENERAL PUBLIC LICENSE
  Version 2 ############ -->

  <meta charset="utf-8">
  <title>StalkerStats | View interesting statistics based on your Facebook data</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="This project is a web app for viewing interesting analytics based on Facebook interactions. User's log into their Facebook accounts which then triggers graphs to be displayed showing information ranging from who tags them in the most photos to who likes their status' the most.">
  <meta name="image" content="assets/headerbg.png" />
  <meta property="og:title" content="Stalker Stats" />
  <meta property="og:description" content="This project is a web app for viewing interesting analytics based on Facebook interactions. User's log into their Facebook accounts which then triggers graphs to be displayed showing information ranging from who tags them in the most photos to who likes their status' the most." />
  <meta property="og:image" content="http://stalker-stats.herokuapp.com/assets/headerbg.png" />
  <!--<meta name="author" content="ArtLabs">-->

  <!-- ######################## Styles ######################
      =======================================================-->
  <link href="assets/animate.min.css" rel="stylesheet">
  <link href="assets/bootstrap.css" rel="stylesheet">
  <link href="assets/bootstrap-responsive.css" rel="stylesheet">
  <!--<link href="assets//flat-ui.css" rel="stylesheet">-->


  <!-- ####################################################################
      !important THIS FILE -= style.css =- ON BOTTOM OF BOOTSTRAP STYLEs  LIST
      It override bootstrap def. style
  ===================================================-->
  <link href="assets/style.css" rel="stylesheet">

  <!-- FontAwesome styles (iconic font)-->
  <!--<link href="assets/font-awesome.min.css" rel="stylesheet">-->
  <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">
  <!-- prettyPhoto styles -->   `

  <!-- Gallery inlarge script styles-->
  <link href="assets/prettyPhoto.css" rel="stylesheet" type="text/css" />

  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
  <!--[if lt IE 9]>
  <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->

  <!-- Google web fonts -->
  <link href='http://fonts.googleapis.com/css?family=Noto+Sans:400,700,400italic,700italic&amp;subset=latin,latin-ext' rel='stylesheet' type='text/css'>

  <!-- Le fav and touch icons -->
  <link rel="shortcut icon" href="assets/small_logo.ico">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="assets/small_logo.ico">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="assets/small_logo.ico">
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="assets/small_logo.ico">
  <link rel="apple-touch-icon-precomposed" href="assets/small_logo.ico">


  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script src="http://dimplejs.org/dist/dimple.v1.1.5.min.js"></script>

</head>

<body data-spy="scroll" data-target=".scroller-spy">

<!--################# D3:GRAPH VISUALIZATION ####################
============================================================ -->

<meta charset="utf-8">
<style>

    .chart div {
        font: 10px sans-serif;
        background-color: steelblue;
        text-align: right;
        padding: 3px;
        margin: 1px;
        color: white;
    }

</style>

<!--################# SET UP FOR FB API ####################
	============================================================ -->

<script>

/*************************GLOBALS********************************/
    var first_graph_made = false;
    var graphs_made = 0;

    var status_sorted_values = [];
    var status_sorted_keys = [];
    var user_to_num_status_liked ={};
    var facebook_ids_to_likes = [];
    var facebook_ids_to_liked_status = {};
    var facebook_ids_to_liked_status_urls = {};
    var all_status_ids;

    var status_commented_sorted_values = [];
    var status_commented_sorted_keys = [];
    var user_to_num_status_commented ={};
    var facebook_ids_to_status_commented = [];
    var facebook_ids_to_commented_status = {};
    var facebook_ids_to_commented_status_urls = {};

    var status_tagged_sorted_values = [];
    var status_tagged_sorted_keys = [];
    var user_to_num_status_taggeded ={};
    var facebook_ids_to_status_tagged = [];
    var facebook_ids_to_tagged_status_urls = {};

    //for first graph, photos tagged in by
    var sorted_values = [];
    var sorted_keys = [];
    var user_to_num_photos_uploaded = {};
    var facebook_ids_to_tags = [];
    var facebook_ids_to_tagged_photos = {};
    var facebook_ids_to_tagged_photo_urls = {};

    //for status you uploaded, like count
    var photo_likes_sorted_ids;
    var photo_comments_sorted_ids;

    var stalker_rankings = {};
    var sorted_stalker_rankings_keys = [];
    var sorted_stalker_rankings_values = [];

/**********************END OF GLOBALS*****************************/

    window.fbAsyncInit = function() {
        FB.init({
            appId      : '682201798512608',
            secret     : '92731fb341abbd0498bc031a2b3817c6',
            status     : true, // check login status
            cookie     : true, // enable cookies to allow the server to access the session
            xfbml      : true  // parse XFBML
        });

        // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
        // for any authentication related change, such as login, logout or session refresh. This means that
        // whenever someone who was previously logged out tries to log in again, the correct case below
        // will be handled.
        FB.Event.subscribe('auth.authResponseChange', function(response) {
            if(!response || response.error){
                alert("An error from Facebook occured. Please refresh your page")
            }else{
                // Here we specify what we do with the response anytime this event occurs.
                if (response.status === 'connected') {
                    // The response object is returned with a status field that lets the app know the current
                    // login status of the person. In this case, we're handling the situation where they
                    // have logged in to the app.
                    testAPI();
//                    console.log('Status: connected');

                    if(first_graph_made == false){
                        document.getElementById('splash').style.visibility = 'visible';
                        document.getElementById('splash2').style.visability = 'visible';

                        //call funcs to make graphs here
                        getUsersPhotos(makeGraph);
                        getUserTaggedInStatuses(makeGraph);
                    }
                    first_graph_made = true;

                } else if (response.status === 'not_authorized') {
                    // In this case, the person is logged into Facebook, but not into the app, so we call
                    // FB.login() to prompt them to do so.
                    // In real-life usage, you wouldn't want to immediately prompt someone to login
                    // like this, for two reasons:
                    // (1) JavaScript created popup windows are blocked by most browsers unless they
                    // result from direct interaction from people using the app (such as a mouse click)
                    // (2) it is a bad experience to be continually prompted to login upon page load.
                    hideButtons();
                    FB.login(function(response) {
//                        console.log('Status: not authorized');
//                        console.log(response);
                        if(!response || response.error){
                            alert("An error from Facebook occured. Please refresh your page")
                        }else{
                            if(response.status === 'connected'){
                                if(first_graph_made == false){
                                    document.getElementById('splash').style.visibility = 'visible';
                                    //call funcs to make graphs here
                                    getUsersPhotos(makeGraph);
                                    //getUserTaggedInStatuses(makeGraph);
                                }
                                first_graph_made = true;
                            }
                        }
                    }, {scope: 'user_photos,friends_photos,user_status,friends_status'});
                } else {
                    // In this case, the person is not logged into Facebook, so we call the login()
                    // function to prompt them to do so. Note that at this stage there is no indication
                    // of whether they are logged into the app. If they aren't then they'll see the Login
                    // dialog right after they log in to Facebook.
                    // The same caveats as above apply to the FB.login() call here.
                    hideButtons();
                    FB.login(function(response) {
//                        console.log('Status: not logged in');
//                        console.log(response);
                        if(!response || response.error){
                            alert("An error from Facebook occured. Please refresh your page")
                        }else{
                            if(response.status === 'connected'){
                                if(first_graph_made == false){
                                    document.getElementById('splash').style.visibility = 'visible';
                                    //call funcs to make graphs here
                                    getUsersPhotos(makeGraph);
                                    //getUserTaggedInStatuses(makeGraph);
                                }
                                first_graph_made = true;
                            }
                        }
                    }, {scope: 'user_photos,friends_photos,user_status,friends_status'});
                }
            }
        });

        FB.Event.subscribe('auth.logout', function(response) {
            location.reload(true);
        });
    };


    function refreshScroll(){
        jQuery('[data-spy="scroll"]').each(function () {
            var jQueryspy = jQuery(this).scrollspy('refresh')
        });
    }
    function showButtons(){
        graphs_made = graphs_made + 1;
        console.log('graphs made = *****'+graphs_made+'****');
        if(graphs_made == 5)
        {
            document.getElementById('mainbody').style.display = '';
            document.getElementById('home-btn').style.visibility = 'visible';
            document.getElementById('photos-btn').style.visibility = 'visible';
            document.getElementById('status-btn').style.visibility = 'visible';
            document.getElementById('rankings-btn').style.visibility = 'visible';
            document.getElementById('team-btn').style.visibility = 'visible';
            document.getElementById('contact-btn').style.visibility = 'visible';
            document.getElementById('splash').style.visibility = 'hidden';
            refreshScroll();
        }else if(graphs_made == 6){
            document.getElementById('splash2').style.visibility = 'hidden';
        }
    }
    function hideButtons(){
        document.getElementById('mainbody').style.display = 'none';
        document.getElementById('home-btn').style.visibility = 'hidden';
        document.getElementById('photos-btn').style.visibility = 'hidden';
        document.getElementById('status-btn').style.visibility = 'hidden';
        document.getElementById('rankings-btn').style.visibility = 'hidden';
        document.getElementById('team-btn').style.visibility = 'hidden';
        document.getElementById('contact-btn').style.visibility = 'hidden';
    }

    // Load the SDK asynchronously
    (function(d){
        var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement('script'); js.id = id; js.async = true;
        js.src = "//connect.facebook.net/en_US/all.js";
        ref.parentNode.insertBefore(js, ref);
    }(document));

    var user_id;

    // Here we run a very simple test of the Graph API after login is successful.
    // This testAPI() function is only called in those cases.
    function testAPI() {
//        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function(response) {
//            console.log('Good to see you, ' + response.name + '.');
//            console.log(response);
            //console.log(response);
            user_id = response.id;

        }, {scope: 'user_photos,friends_photos,user_status,friends_status'});
    }

    function getPhotoLikesComments(photoResponse,callback) {
        if(!photoResponse || photoResponse.error){
            alert("An error from Facebook occured. Please refresh your page")
        }else{

            var user_to_photoLikes = [];
            var user_to_photoComments = [];
            var numPhotos = photoResponse.data.length; //must be at least 1
            var like_photos_urls = {};
            var like_photos = {};

            var comment_photos_urls = {};
            var comment_photos = {};
            for (var i=0; i<numPhotos; i++){
                var photo = photoResponse.data[i];
                //console.log(i);
                //console.log("HELLOOOOOOO");
                //console.log(photo);
                //LIKES
                var likesResponse = photo.likes;
                //console.log('Likes object pic num'+i+':');
                //console.log(likesResponse);

                if(likesResponse) {
                    for(var j=0;j<likesResponse.data.length; j++) {
                        var user = likesResponse.data[j];
                        if(user.id == user_id) {
                            //do not add yourself
                        }
                        else if (user.name in user_to_photoLikes) {
                            user_to_photoLikes[user.name]++;
                            like_photos[user.name].push(photo.source);
                            like_photos_urls[user.name].push(photo.link);

                        }
                        else {
                            user_to_photoLikes[user.name] = 1;
                            like_photos[user.name] = [];
                            like_photos_urls[user.name] = [];
                            like_photos[user.name].push(photo.source);
                            like_photos_urls[user.name].push(photo.link);
                        }
                    }
                }

                //console.log("user to photo likes");
                //console.log(user_to_photoLikes);

                //COMMENTS
                var commentsResponse = photo.comments;
                //console.log('Comments object pic num'+i+':');

                // console.log('Comments object pic num'+i+':');

                //console.log(commentsResponse);
                if(commentsResponse) {
                    for(var j=0;j<commentsResponse.data.length; j++) {
                        var comment = commentsResponse.data[j];
    //                    console.log("printing comment");
    //                    console.log(comment);
                        if('from' in comment){
                            if(comment.from.id == user_id) {
                                //do not add yourself
                            }
                            else if (comment.from.name in user_to_photoComments) {
                                user_to_photoComments[comment.from.name]++;
                                comment_photos[comment.from.name].push(photo.source);
                                comment_photos_urls[comment.from.name].push(photo.link);

                            }
                            else {
                                user_to_photoComments[comment.from.name] = 1;
                                comment_photos[comment.from.name] = [];
                                comment_photos_urls[comment.from.name] = [];
                                comment_photos[comment.from.name].push(photo.source);
                                comment_photos_urls[comment.from.name].push(photo.link);

                            }
                        }
                    }
                }

                //console.log("user to photo comments");
                //console.log(user_to_photoComments);
            }

            //console.log('After going through all pics');
            //console.log("user to photo likes");
            // console.log(user_to_photoLikes);
            //console.log("user to photo comments");
            //console.log(user_to_photoComments);

            /*console.log('After going through all pics');
             console.log("user to photo likes");
             console.log(user_to_photoLikes);
             console.log("user to photo comments");
             console.log(user_to_photoComments);*/

            //Functions to sort
            function keysbyValue(O){
                var A= [];
                for(var p in O){
                    if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                }
                A.sort(function(a, b){
                    var a1= a[1], b1= b[1];
                    return b1 - a1;
                });
                for(var i= 0, L= A.length; i<L; i++){
                    A[i]= A[i][0];
                }
                var obj = {};
                for(var i= 0, L= A.length; i<L; i++){
                    obj[i] = {key: A[i], value: O[A[i]]};
                }
                return obj;
            }

            function getSortedKeys(O){
                var A= [];
                for(var p in O){
                    if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                }
                A.sort(function(a, b){
                    var a1= a[1], b1= b[1];
                    return b1 - a1;
                });
                for(var i= 0, L= A.length; i<L; i++){
                    A[i]= A[i][0];
                }
                return A;
            }

            function getSortedValues(O){
                var A= [];
                for(var p in O){
                    if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                }
                A.sort(function(a, b){
                    var a1= a[1], b1= b[1];
                    return b1 - a1;
                });
                for(var i= 0, L= A.length; i<L; i++){
                    A[i]= A[i][1];
                }
                return A;
            }


            //end functions to sort

            ///////////LIKES GRAPH//////////
            //var sorted_ids = getSortedKeys(user_to_photoLikes);
            //var sorted_Counts = getSortedValues(user_to_photoLikes);

            //user_to_photoLikes = keysbyValue(user_to_photoLikes);

            //console.log("user_to_photoLikes");
            //console.log(user_to_photoLikes);
            //console.log("sorted_ids");
            //console.log(sorted_ids);
            //console.log("sorted_Counts");
            //console.log(sorted_Counts);
            //var facebook_ids_to_photoLikes = [];
            //for (var i=0; i<20 && i<sorted_ids.length && i<sorted_Counts.length; i++){
            //   facebook_ids_to_photoLikes[i] = { "Facebook ID":sorted_ids[i], "Number of Photo Likes":sorted_Counts[i] };
            //}
            //console.log("facebook_ids_to_photoLikes");
            //console.log(facebook_ids_to_photoLikes);

            //make the graph with user_to_photoLikes
            photo_likes_sorted_ids = getSortedKeys(user_to_photoLikes);

            var sorted_counts = getSortedValues(user_to_photoLikes);

            //user_to_num_photos_uploaded = keysbyValue(user_to_photoLikes);

            var facebook_ids_to_photoLikes = [];
            for (var i=0; i<20; i++){
                facebook_ids_to_photoLikes[i] = { "Facebook ID":photo_likes_sorted_ids[i], "Number of Photo Likes":sorted_counts[i] };
            }

            var current_selected_bar;
            var previous_selected_x;
            var previous_colors;
            var tray_closed = true;

            var svg = dimple.newSvg("#photoLikesChart", 1000, 500);
            var data = [
                { "Facebook ID":"Hello", "Number of Photo Likes":2000 },
                { "Facebook ID":"World", "Number of Photo Likes":3000 }
            ];
            //console.log("data for fake chart");
            //console.log(data);

            var chart = new dimple.chart(svg, facebook_ids_to_photoLikes);
            var x = chart.addCategoryAxis("x", "Facebook ID");
            //                        x.tickFormat = "%20.10s";
            var y = chart.addMeasureAxis("y", "Number of Photo Likes");
            y.tickFormat = "i";
            var s = chart.addSeries("Facebook ID", dimple.plot.bar);

            s.addEventHandler("click", function (e) {
    //                            alert("Hey, you clicked " + e.seriesValue + ". Woooooo!");
                svg.attr("height", 550);

                for(var i = 0;i<6;i++) {
                    //console.log("Helloooo "+i);
                    if(like_photos[e.seriesValue].length > i){
                        document.getElementById('liked-photo-'+(i+1)).src = like_photos[e.seriesValue][i];
                        document.getElementById('liked-link-'+(i+1)).href = like_photos_urls[e.seriesValue][i];
                        jQuery('#liked-photo-box-'+i).show();
                    }
                    else{
                        jQuery('#liked-photo-box-'+i).hide();
                        document.getElementById('liked-photo-'+(i+1)).src = "";
                        document.getElementById('liked-link-'+(i+1)).href = "";
                    }
                }


                if(String(current_selected_bar) == String(e.seriesValue)){
//                    console.log('hi1');
                    // Clicked same bar, close or open tray
                    if (jQuery('#collapsePhotoLikes').hasClass('in')) {
//                        console.log('hi2');
                        // tray is open, close tray
                        jQuery('#collapsePhotoLikes').collapse('hide');
                        //Unhighlight the bar
                        if(previous_selected_x){
                            chart.assignColor(previous_selected_x, previous_colors.fill, previous_colors.stroke, previous_colors.opacity);

                            x.shapes.selectAll('.tick').each(function(d, i) {
                                if(d == String(previous_selected_x)) {
                                    d3.select(this)
                                            .selectAll('text')
                                            .style("font-weight", "normal")
                                }
                            });
                        }
                    }
                    else{
//                        console.log('hi3');
                        // tray is closed, open tray
                        jQuery('#collapsePhotoLikes').collapse('show');
                        //Highlight the bar
                        chart.assignColor(e.xValue, chart.getColor(e.xValue).stroke, "black", 1);
                        //Iterate through ticks, make right one bold
                        x.shapes.selectAll('.tick').each(function(d, i) {
                            if(d == String(e.xValue)) {
                                d3.select(this)
                                        .selectAll('text')
                                        .style("font-weight", "bold")
                            }
                        });
                        //Scroll to accordian
                        jQuery('html, body').animate({
                            scrollTop: jQuery("#accordionPhotoLikes").offset().top - 200
                        }, {duration: 375}, 2500);
                    }
                }
                else if(current_selected_bar == null){
//                    console.log('hi4'+ e.xValue);
                    //Store the original tag name and colors of the selectedbar
                    previous_selected_x = e.xValue;
                    previous_colors = chart.getColor(e.xValue);
                    //Highlight bar
                    chart.assignColor(e.xValue, chart.getColor(e.xValue).stroke, "black", 1);
                    //Iterate through ticks and highlight new selection
                    x.shapes.selectAll('.tick').each(function(d, i) {
                        if(d == String(e.xValue)) {
                            d3.select(this)
                                    .selectAll('text')
                                    .style("font-weight", "bold")
                        }
                    });
                    //Scroll to accordian
                    jQuery('html, body').animate({
                        scrollTop: jQuery("#accordionPhotoLikes").offset().top - 200
                    }, {duration: 375}, 2500);
                    // no bar selected yet, open tray
                    jQuery('#collapsePhotoLikes').collapse('show');
    //                                togglePhotoTray1();
                }
                else if(String(current_selected_bar) != String(e.seriesValue)){
//                    console.log('hi5');
                    //Reset old bar to non-highlight
                    if(previous_selected_x)
                        chart.assignColor(previous_selected_x, previous_colors.fill, previous_colors.stroke, previous_colors.opacity);
                    //Store the original tag name and colors of newly selected bar
                    //Iterate through ticks, unbold old selection, bold new selection
                    x.shapes.selectAll('.tick').each(function(d, i) {
                        if(previous_selected_x && d == String(previous_selected_x)){
                            d3.select(this)
                                    .selectAll('text')
                                    .style("font-weight", "normal")
                        }

                        if(d == String(e.xValue)) {
                            d3.select(this)
                                    .selectAll('text')
                                    .style("font-weight", "bold")
                        }
                    });
                    previous_selected_x = e.xValue;
                    previous_colors = chart.getColor(e.xValue);
                    //Highlight new bar
                    chart.assignColor(e.xValue, chart.getColor(e.xValue).stroke, "black", 1);
                    //Scroll to accordian
                    jQuery('html, body').animate({
                        scrollTop: jQuery("#accordionPhotoLikes").offset().top - 200
                    }, {duration: 375}, 2500);
                    // Selecting new bar
                    if (jQuery('#collapsePhotoLikes').hasClass('in')) {
                        // tray is open, do not change tray
                    }
                    else{
                        // tray is closed, open tray
                        jQuery('#collapsePhotoLikes').collapse('show');
                    }
                }
                current_selected_bar = e.seriesValue;


                chart.draw();
                 chart.setMargins(60,50,50,150);
                 x.shapes.selectAll("text").attr("transform",
                 function (d) {
                 return d3.select(this).attr("transform") + " translate(27, 36) rotate(-135)";
                 });
                 x.shapes.selectAll("text").style("text-anchor", "end");
                 x.titleShape.remove();

                 y.titleShape.attr("transform",
                 function (d) {
                 return d3.select(this).attr("transform") + " translate(-10, -4) rotate(0)";
                 });
                svg.attr("height", 600);
            });

            //click event handler code here

            var chartObject = chart.draw();
            chart.setMargins(60,50,50,150);
            x.shapes.selectAll("text").attr("transform",
                    function (d) {
                        return d3.select(this).attr("transform") + " translate(0, 15) rotate(-45)";
                    });
            x.shapes.selectAll("text").style("text-anchor", "end");
//            console.log('x.titleShape in photo likes graph removed');
            x.titleShape.remove();

            y.titleShape.attr("transform",
                    function (d) {
                        return d3.select(this).attr("transform") + " translate(0, -20) rotate(0)";
                    });

            svg.attr("height", 600);

            while(!chartObject){}
            if (chartObject){
                showButtons();
            }


            /////////////COMMENTS GRAPH////////////////////////////
            photo_comments_sorted_ids = getSortedKeys(user_to_photoComments);

            sorted_counts = getSortedValues(user_to_photoComments);

            //user_to_num_photos_uploaded = keysbyValue(user_to_photoComments);

            var facebook_ids_to_photoComments = [];
            for (var i=0; i<20; i++){
                facebook_ids_to_photoComments[i] = { "Facebook ID":photo_comments_sorted_ids[i], "Number of Photo Comments":sorted_counts[i] };
            }

            var current_selected_bar2;
            var previous_selected_x2;
            var previous_colors2;
            var tray_closed2 = true;


            var svg2 = dimple.newSvg("#photoCommentsChart", 1000, 500);
            var data2 = [
                { "Facebook ID":"Hello", "Number of Photo Comments":2000 },
                { "Facebook ID":"World", "Number of Photo Comments":3000 }
            ];
            //console.log("data for fake chart");
            //console.log(data);

            var chart2 = new dimple.chart(svg2, facebook_ids_to_photoComments);
            var x2 = chart2.addCategoryAxis("x", "Facebook ID");
            //                        x.tickFormat = "%20.10s";
            var y2 = chart2.addMeasureAxis("y", "Number of Photo Comments");
            y2.tickFormat = "i";
            var s2 = chart2.addSeries("Facebook ID", dimple.plot.bar);

            s2.addEventHandler("click", function (e) {
    //                            alert("Hey, you clicked " + e.seriesValue + ". Woooooo!");
                svg2.attr("height", 550);

                for(var i = 0;i<6;i++) {
                    //console.log("Helloooo "+i);
                    if(comment_photos[e.seriesValue].length > i){
                        document.getElementById('commented-photo-'+(i+1)).src = comment_photos[e.seriesValue][i];
                        document.getElementById('commented-link-'+(i+1)).href = comment_photos_urls[e.seriesValue][i];
                        jQuery('#commented-photo-box-'+i).show();
                    }
                    else{
                        jQuery('#commented-photo-box-'+i).hide();
                        document.getElementById('commented-photo-'+(i+1)).src = "";
                        document.getElementById('commented-link-'+(i+1)).href = "";
                    }
                }


                if(String(current_selected_bar2) == String(e.seriesValue)){
                    // Clicked same bar, close or open tray
                    if (jQuery('#collapsePhotoComments').hasClass('in')) {
                        // tray is open, close tray
                        jQuery('#collapsePhotoComments').collapse('hide');
                        //Unhighlight the bar
                        if(previous_selected_x2){
                            chart2.assignColor(previous_selected_x2, previous_colors2.fill, previous_colors2.stroke, previous_colors2.opacity);

                            x2.shapes.selectAll('.tick').each(function(d, i) {
                                if(d == String(previous_selected_x2)) {
                                    d3.select(this)
                                            .selectAll('text')
                                            .style("font-weight", "normal")
                                }
                            });
                        }
                    }
                    else{
                        // tray is closed, open tray
                        jQuery('#collapsePhotoComments').collapse('show');
                        //Highlight the bar
                        chart2.assignColor(e.xValue, chart2.getColor(e.xValue).stroke, "black", 1);
                        //Iterate through ticks, make right one bold
                        x2.shapes.selectAll('.tick').each(function(d, i) {
                            if(d == String(e.xValue)) {
                                d3.select(this)
                                        .selectAll('text')
                                        .style("font-weight", "bold")
                            }
                        });
                        //Scroll to accordion
                        jQuery('html, body').animate({
                            scrollTop: jQuery("#accordionPhotoComments").offset().top - 200
                        }, {duration: 375}, 2500);
                    }
                }
                else if(current_selected_bar2 == null){
                    //Store the original tag name and colors of the selectedbar
                    previous_selected_x2 = e.xValue;
                    previous_colors2 = chart2.getColor(e.xValue);
                    //Highlight bar
                    chart2.assignColor(e.xValue, chart2.getColor(e.xValue).stroke, "black", 1);
                    //Iterate through ticks and highlight new selection
                    x2.shapes.selectAll('.tick').each(function(d, i) {
                        if(d == String(e.xValue)) {
                            d3.select(this)
                                    .selectAll('text')
                                    .style("font-weight", "bold")
                        }
                    });
                    //Scroll to accordion
                    jQuery('html, body').animate({
                        scrollTop: jQuery("#accordionPhotoComments").offset().top - 200
                    }, {duration: 375}, 2500);
                    // no bar selected yet, open tray
                    jQuery('#collapsePhotoComments').collapse('show');
    //                                togglePhotoTray1();
                }
                else if(String(current_selected_bar2) != String(e.seriesValue)){
                    //Reset old bar to non-highlight
                    if(previous_selected_x2)
                        chart2.assignColor(previous_selected_x2, previous_colors2.fill, previous_colors2.stroke, previous_colors2.opacity);
                    //Store the original tag name and colors of newly selected bar
                    //Iterate through ticks, unbold old selection, bold new selection
                    x2.shapes.selectAll('.tick').each(function(d, i) {
                        if(previous_selected_x2 && d == String(previous_selected_x2)){
                            d3.select(this)
                                    .selectAll('text')
                                    .style("font-weight", "normal")
                        }

                        if(d == String(e.xValue)) {
                            d3.select(this)
                                    .selectAll('text')
                                    .style("font-weight", "bold")
                        }
                    });
                    previous_selected_x2 = e.xValue;
                    previous_colors2 = chart2.getColor(e.xValue);
                    //Highlight new bar
                    chart2.assignColor(e.xValue, chart2.getColor(e.xValue).stroke, "black", 1);
                    //Scroll to accordion
                    jQuery('html, body').animate({
                        scrollTop: jQuery("#accordionPhotoComments").offset().top - 200
                    }, {duration: 375}, 2500);
                    // Selecting new bar
                    if (jQuery('#collapsePhotoComments').hasClass('in')) {
                        // tray is open, do not change tray
                    }
                    else{
                        // tray is closed, open tray
                        jQuery('#collapsePhotoComments').collapse('show');
                    }
                }
                current_selected_bar2 = e.seriesValue;


                chart2.draw();
                 chart2.setMargins(60,50,50,150);
                 x2.shapes.selectAll("text").attr("transform",
                 function (d) {
                 return d3.select(this).attr("transform") + " translate(27, 36) rotate(-135)";
                 });
                 x2.shapes.selectAll("text").style("text-anchor", "end");
                 x2.titleShape.remove();

                 y2.titleShape.attr("transform",
                 function (d) {
                 return d3.select(this).attr("transform") + " translate(-10, -4) rotate(0)";
                 });
                svg2.attr("height", 600);


            });

            var chartObject2 = chart2.draw();
            chart2.setMargins(60,50,50,150);
            x2.shapes.selectAll("text").attr("transform",
                    function (d) {
                        return d3.select(this).attr("transform") + " translate(0, 15) rotate(-45)";
                    });
            x2.shapes.selectAll("text").style("text-anchor", "end");
            x2.titleShape.remove();

            y2.titleShape.attr("transform",
                    function (d) {
                        return d3.select(this).attr("transform") + " translate(0, -20) rotate(0)";
                    });
            svg2.attr("height", 600);




                while(!chartObject2){}
                if (chartObject2){
                    showButtons();

                }
                /*sorted_keys = getSortedKeys(user_to_photoComments);

                 sorted_values = getSortedValues(user_to_photoComments);

                 user_to_num_photos_uploaded = keysbyValue(user_to_photoComments);


                 for (var i=0; i<20; i++){
                 facebook_ids_to_tags[i] = { "Facebook ID":sorted_keys[i], "Number of Photo Tags":sorted_values[i] };
                 }


                 console.log('Ids to Comments')
                 console.log(facebook_ids_to_tags);

                 console.log('Ids to Photos vector');
                 facebook_ids_to_tagged_photos = comment_photos;
                 console.log(facebook_ids_to_tagged_photos);


                 console.log('Ids to Photos urls');
                 facebook_ids_to_tagged_photo_urls = comment_photos_urls;
                 console.log(facebook_ids_to_tagged_photo_urls);

                 callback();*/



                //COMMENTS
                //sorted_ids = getSortedKeys(user_to_photoComments);
                //sorted_Counts = getSortedValues(user_to_photoComments);
                //user_to_photoComments = keysbyValue(user_to_photoComments);
                //console.log("user_to_photoComments");
                //console.log(user_to_photoComments);
                //console.log("sorted_ids");
                //console.log(sorted_ids);
                //console.log("sorted_Counts");
                //console.log(sorted_Counts);
                //var facebook_ids_to_photoComments = [];

                //for (var i=0; i<20; i++){
                //   facebook_ids_to_photoComments[i] = { "Facebook ID":sorted_ids[i], "Number of Photo Likes":sorted_Counts[i] };
                //}
                //console.log("facebook_ids_to_photoComments");
                //console.log(facebook_ids_to_photoComments);

                //make the graph with user_to_photoComments

                /*
                 sorted_keys = getSortedKeys(user_to_photoLikes);

                 sorted_values = getSortedValues(user_to_photoLikes);

                 user_to_num_photos_uploaded = keysbyValue(user_to_photoLikes);

                 for (var i=0; i<20; i++){
                 facebook_ids_to_tags[i] = facebook_ids_to_photoLikes[i];
                 }

                 console.log("facebook_ids_to_tags");
                 console.log(facebook_ids_to_tags);

                 //makegraph();



                 }
                 };

                 */
            }

        };

//    var max_params = {limit:1000};
    var max_params = {since:"01-01-2010", limit:1000};

    function getStatusComments(response){
        if(!response || response.error){
            alert("An error from Facebook occured. Please refresh your page")
        }else{
            var post = response;
    //        console.log('get status commment response');
    //        console.log(response);
            if('comments' in post){
                for( var j = 0; j < post.comments.data.length; j++){
    //                console.log('printing status content');
    //                console.log(post.comments.data[j]);
                    if('from'in post.comments.data[j]){
                        var user_name = post.comments.data[j].from.name;
                        //console.log('username: '+ user_name);
                        if(post.comments.data[j].from.id != user_id){
                            if( user_name in user_to_num_status_commented){
                                user_to_num_status_commented[user_name]++;
                                //facebook_ids_to_liked_status[total_likers_data[j].name].push(all_status_ids[i].source);
                                //facebook_ids_to_liked_status_urls[total_likers_data[j].name].push(all_status_ids[i].link);
                            }else{
                                user_to_num_status_commented[user_name] = 1;
                                //facebook_ids_to_liked_status[total_likers_data[j].name] = [];
                                //facebook_ids_to_liked_status_urls[total_likers_data[j].name] = [];
                                //facebook_ids_to_liked_status[total_likers_data[j].name].push(all_status_ids[i].source);
                                //facebook_ids_to_liked_status_urls[total_likers_data[j].name].push(all_status_ids[i].link);
                            }
                        }
                    }
                }
        }else if('data' in post){
            for( var j = 0; j < post.data.length; j++){
                if('from' in post.data[j]){
                    var user_name = post.data[j].from.name;
                    //console.log('paged adding name: '+ user_name);
                    if(post.data[j].from.id != user_id){
                        if( user_name in user_to_num_status_commented){
                            user_to_num_status_commented[user_name]++;
                        }else{
                            user_to_num_status_commented[user_name] = 1;
                        }
                    }
                }
            }
        }

        if('comments' in post){
            if ('paging' in post.comments && 'next' in post.comments.paging && post.comments.paging.next != 'undefined' ){
//                console.log('paging comments');
                FB.api(response.comments.paging.next, max_params , getStatusComments);
            }
        }else if('data' in post){
            if('paging' in post.data && 'next' in post.data.paging && post.data.paging.next != 'undefined'){
//                console.log('paging comments again');
                FB.api(response.paging.next, max_params ,  getStatusComments);
            }
        }
     }
    }

    function getLikes(response){
        if(!response || response.error){
            alert("An error from Facebook occured. Please refresh your page")
        }else{
            var post = response;
//        console.log('get likes response');
//        console.log(response);
            if('likes' in post){
                for( var j = 0; j < post.likes.data.length; j++){
                    if('name' in post.likes.data[j]){
                        var user_name = post.likes.data[j].name;
                        if( user_name in user_to_num_status_liked){
                            user_to_num_status_liked[post.likes.data[j].name]++;
//                        facebook_ids_to_liked_status[user_name].push(post.message);
//                        facebook_ids_to_liked_status_urls[user_name].push(post.id);
                        }else{
                            user_to_num_status_liked[post.likes.data[j].name] = 1;
//                        facebook_ids_to_liked_status[user_name] = [];
//                        facebook_ids_to_liked_status_urls[user_name] = [];
//                        facebook_ids_to_liked_status[user_name].push(post.message);
//                        facebook_ids_to_liked_status_urls[user_name].push(post.id);
                        }
                    }
                }
            }else if('data' in post){
//                console.log('paged')
//                console.log(temp_id_likes)
//                console.log(temp_message_likes)
                for( var j = 0; j < post.data.length; j++){
//                console.log('paged likes');
//                console.log(post);
                    if('name' in post.data[j]){
                        var user_name = post.data[j].name;
                        if( user_name in user_to_num_status_liked){
                            user_to_num_status_liked[post.data[j].name]++;
                        }else{
                            user_to_num_status_liked[post.data[j].name] = 1;
                        }
                    }
                }
            }
            if('likes' in post){
                if ('paging' in post.likes && 'next' in post.likes.paging && post.likes.paging.next != 'undefined' ){
//                console.log('paging likes');
                    temp_message_likes = post.message;
                    temp_id_likes = post.id;
//                    console.log('paging likes')
//                    console.log(temp_id_likes)
//                    console.log(temp_message_likes)
                    FB.api(response.likes.paging.next, max_params , getLikes);
                }
            }else if('data' in post){
                if('paging' in post.data && 'next' in post.data.paging && post.data.paging.next != 'undefined'){
//                console.log('paging likes again');
                    FB.api(response.likes.paging.next, max_params ,  getLikes);
                }
            }

        }
    }

    function getAllstatus(response){
        if(!response || response.error){
            alert("An error from Facebook occured. Please refresh your page")
        }else{
//            console.log(response);
            all_status_ids = response.data;
            // PREPARE MAP OF USER_ID (who uploaded the photo) to NUM_PHOTOS (number they uploaded)
            for (var i=0; i< all_status_ids.length; i++){
                    if('likes' in all_status_ids[i] && all_status_ids[i].type != "question"){
                        //console.log(all_status_ids[i]);
    //                    console.log('calling get likes for ' + i);
                        getLikes(all_status_ids[i]);
                    }
                    if('comments' in all_status_ids[i] && all_status_ids[i].type != "question"){
    //                    console.log('calling get comments for '+i);
                        getStatusComments(all_status_ids[i]);
                    }
            }

            if ('paging' in response && response.paging.next != "undefined"){
                FB.api(response.paging.next, max_params ,getAllstatus);
            }else{
                //console.log('calling finishing');
                finishStatusGraph(makeStatusGraph, makeStatusCommentGraph);
            }
        }
    }

    function getUsersStatusLikes(callback){
//        console.log('before');
//        setTimeout(function(){
//            console.log('after');
//        },800);
//        console.log('getting status ids....');
//        console.log('/' +user_id + '/feed');
        FB.api('/me/statuses?limit=5000', max_params, getAllstatus);
    }



    function getAllStatusTags(response){
        if(!response || response.error){
            alert("An error from Facebook occured. Please refresh your page")
        }else{
            var all_tags = response.data;
//            console.log('all_tags');
//            console.log(response);

            for(var i = 0; i < all_tags.length; i++){

                //console.log(all_tags[i]);
                var name = all_tags[i].from.name;

                if(name in user_to_num_status_taggeded){
                    user_to_num_status_taggeded[name]++;
                }else{
                    user_to_num_status_taggeded[name]=1;
                }
            }

            if('paging' in response && response.paging.next != 'undefined'){
                FB.api(response.paging.next,max_params ,getAllStatusTags);
            }else{
//                console.log('finished');
                finishTaggedStatusGraph(makeTaggedStatusGraph);
            }
        }
    }

    function getUserTaggedInStatuses(callback){
//        console.log('getting tagged statuses');
//        console.log('/me/tagged');

        FB.api('me/tagged?fields=id,from&limit=1000&offset=0',max_params, getAllStatusTags);
//        FB.api('me/tagged?fields=id,from&limit=1000&offset=0', function(response){
//            console.log("testPprint");
//            console.log(response);
//        });
    }

    function finishTaggedStatusGraph(callback){
        function keysbyValue(O){
            var A= [];
            for(var p in O){
                if(O.hasOwnProperty(p)) A.push([p, O[p]]);
            }
            A.sort(function(a, b){
                var a1= a[1], b1= b[1];
                return b1 - a1;
            });
            for(var i= 0, L= A.length; i<L; i++){
                A[i]= A[i][0];
            }
            var obj = {};
            for(var i= 0, L= A.length; i<L; i++){
                obj[i] = {key: A[i], value: O[A[i]]};
            }
            return obj;
        }

        function getSortedKeys(O){
            var A= [];
            for(var p in O){
                if(O.hasOwnProperty(p)) A.push([p, O[p]]);
            }
            A.sort(function(a, b){
                var a1= a[1], b1= b[1];
                return b1 - a1;
            });
            for(var i= 0, L= A.length; i<L; i++){
                A[i]= A[i][0];
            }
            return A;
        }

        function getSortedValues(O){
            var A= [];
            for(var p in O){
                if(O.hasOwnProperty(p)) A.push([p, O[p]]);
            }
            A.sort(function(a, b){
                var a1= a[1], b1= b[1];
                return b1 - a1;
            });
            for(var i= 0, L= A.length; i<L; i++){
                A[i]= A[i][1];
            }
            return A;
        }
//    var status_tagged_sorted_values = [];
//    var status_tagged_sorted_keys = [];
//    var user_to_num_status_taggeded ={};
//    var facebook_ids_to_status_tagged = [];
//    var facebook_ids_to_tagged_status_urls = {};

        status_tagged_sorted_keys = getSortedKeys(user_to_num_status_taggeded);
        status_tagged_sorted_values = getSortedValues(user_to_num_status_taggeded);
        user_to_num_status_taggeded = keysbyValue(user_to_num_status_taggeded);


//        console.log("user to num status tagged");
//        console.log(user_to_num_status_taggeded);

        for (var x=0; x<20; x++){
            facebook_ids_to_status_tagged[x] = { "Facebook ID":status_tagged_sorted_keys[x], "Number of Statuses Tagged":status_tagged_sorted_values[x] };
        }


//        console.log('facebook_ids_to_status_tagged');
//        console.log(facebook_ids_to_status_tagged);

//        console.log('calling make tagged Graph');
        callback();
    }

    function finishStatusGraph(callback1, callback2){

//        console.log("in finishStatusGraph");
        //console.log(user_to_num_status_liked);
        //console.log(user_to_num_status_commented);
        //sort it now
        function keysbyValue(O){
            var A= [];
            for(var p in O){
                if(O.hasOwnProperty(p)) A.push([p, O[p]]);
            }
            A.sort(function(a, b){
                var a1= a[1], b1= b[1];
                return b1 - a1;
            });
            for(var i= 0, L= A.length; i<L; i++){
                A[i]= A[i][0];
            }
            var obj = {};
            for(var i= 0, L= A.length; i<L; i++){
                obj[i] = {key: A[i], value: O[A[i]]};
            }
            return obj;
        }

        function getSortedKeys(O){
            var A= [];
            for(var p in O){
                if(O.hasOwnProperty(p)) A.push([p, O[p]]);
            }
            A.sort(function(a, b){
                var a1= a[1], b1= b[1];
                return b1 - a1;
            });
            for(var i= 0, L= A.length; i<L; i++){
                A[i]= A[i][0];
            }
            return A;
        }

        function getSortedValues(O){
            var A= [];
            for(var p in O){
                if(O.hasOwnProperty(p)) A.push([p, O[p]]);
            }
            A.sort(function(a, b){
                var a1= a[1], b1= b[1];
                return b1 - a1;
            });
            for(var i= 0, L= A.length; i<L; i++){
                A[i]= A[i][1];
            }
            return A;
        }

        status_sorted_keys = getSortedKeys(user_to_num_status_liked);
        status_sorted_values = getSortedValues(user_to_num_status_liked);
        user_to_num_status_liked = keysbyValue(user_to_num_status_liked);

        status_commented_sorted_keys = getSortedKeys(user_to_num_status_commented);
        status_commented_sorted_values = getSortedValues(user_to_num_status_commented);
        user_to_num_status_commented = keysbyValue(user_to_num_status_commented);

//        console.log("user to num status liked");
//        console.log(user_to_num_status_liked);
//        console.log(user_to_num_status_commented);

//        console.log("sorted_keys status ");
//        console.log(status_sorted_keys);
//        console.log(status_commented_sorted_keys);

//        console.log("sorted_values status");
//        console.log(status_sorted_values);
//        console.log(status_commented_sorted_values);

//        console.log('FB likes statuses')
//        console.log(facebook_ids_to_liked_status);
//        console.log(facebook_ids_to_liked_status_urls);

        for (var x=0; x<20; x++){
                facebook_ids_to_likes[x] = { "Facebook ID":status_sorted_keys[x], "Number of Posts Liked":status_sorted_values[x] };
                facebook_ids_to_status_commented[x] = { "Facebook ID":status_commented_sorted_keys[x], "Number of Posts Commented":status_commented_sorted_values[x] };
        }

//        console.log("facebook_ids_to_likes");
//        console.log(facebook_ids_to_likes);
//        console.log('facebook_ids_commented_status');
//        console.log(facebook_ids_to_status_commented);

//        console.log('calling make status Graph');
        callback1();
        callback2();

    }



    // Grab all users' photos
    function getUsersPhotos(callback) {
//        console.log('Fetching photos.... ');

//        var params = {limit:500};
        var params = {since:"01-01-2010", limit:5000};
//1262304000
        FB.api('/me/photos', params, function(photoResponse) {
            //console.log('Got response');
//            var photos = JSON.parse(photoResponse.data);
//            console.log('Link: ' + photos[0].link);
//            var photos = response["data"];
            //console.log("photoResponse");
            //console.log(photoResponse);
            //getPhotoLikesComments(photoResponse);

//            console.log("photoResponse");
//            console.log(photoResponse);
            if(!photoResponse || photoResponse.error){
                alert("An error from Facebook occured. Please refresh your page")
            }else{
                var all_data;
                all_data = photoResponse.data;

                for (var i=0; i<photoResponse.data.length; i++){
                    var photo = photoResponse.data[i];
                    //console.log('Link: ' + photo.link);
                    if(i==0){
                        document.getElementById('feature-item-1').src = photo.source;
                    }
                    if(i==1){
                        document.getElementById('feature-item-2').src = photo.source;
                    }
                    if(i==2){
                        document.getElementById('feature-item-3').src = photo.source;
                    }
                    if(i==3){
                        document.getElementById('feature-item-4').src = photo.source;
                    }

                }


                // NEED TO LOOP THROUGH PAGES

                var desiredAttributes=["id","from"];
                var myJSONText = JSON.stringify(all_data, desiredAttributes);

                //console.log(myJSONText);
//            console.log('Link: ' + response.data[0].link + '.');


                //console.log("all_data");
                //console.log(all_data);

                // PREPARE MAP OF USER_ID (who uploaded the photo) to NUM_PHOTOS (number they uploaded)
                //var user_to_num_photos_uploaded = {};
                for (var i=0; i< all_data.length; i++){
                    var user_name = all_data[i].from.name;

                    if(all_data[i].from.id == user_id){

                    }
                    else{
                        if (user_name in user_to_num_photos_uploaded) {
                            user_to_num_photos_uploaded[all_data[i].from.name]++;
                            facebook_ids_to_tagged_photos[all_data[i].from.name].push(all_data[i].source);
                            facebook_ids_to_tagged_photo_urls[all_data[i].from.name].push(all_data[i].link);
                        } else {
                            user_to_num_photos_uploaded[all_data[i].from.name] = 1;
                            facebook_ids_to_tagged_photos[all_data[i].from.name] = [];
                            facebook_ids_to_tagged_photo_urls[all_data[i].from.name] = [];
                            facebook_ids_to_tagged_photos[all_data[i].from.name].push(all_data[i].source);
                            facebook_ids_to_tagged_photo_urls[all_data[i].from.name].push(all_data[i].link);

                        }
                    }
                }

                //console.log(user_to_num_photos_uploaded);



//
//            user_to_num_photos_uploaded.sort(function(obj1, obj2) {
//                //return obj1.value - obj2.value;
//                var a1= obj1[1], b1= obj2[1];
//                return b1 - a1;
//            });

                //user_to_num_photos_uploaded.sort();


                function keysbyValue(O){
                    var A= [];
                    for(var p in O){
                        if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                    }
                    A.sort(function(a, b){
                        var a1= a[1], b1= b[1];
                        return b1 - a1;
                    });
                    for(var i= 0, L= A.length; i<L; i++){
                        A[i]= A[i][0];
                    }
                    var obj = {};
                    for(var i= 0, L= A.length; i<L; i++){
                        obj[i] = {key: A[i], value: O[A[i]]};
                    }
                    return obj;
                }

                function getSortedKeys(O){
                    var A= [];
                    for(var p in O){
                        if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                    }
                    A.sort(function(a, b){
                        var a1= a[1], b1= b[1];
                        return b1 - a1;
                    });
                    for(var i= 0, L= A.length; i<L; i++){
                        A[i]= A[i][0];
                    }
                    return A;
                }

                function getSortedValues(O){
                    var A= [];
                    for(var p in O){
                        if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                    }
                    A.sort(function(a, b){
                        var a1= a[1], b1= b[1];
                        return b1 - a1;
                    });
                    for(var i= 0, L= A.length; i<L; i++){
                        A[i]= A[i][1];
                    }
                    return A;
                }

                sorted_keys = getSortedKeys(user_to_num_photos_uploaded);

                sorted_values = getSortedValues(user_to_num_photos_uploaded);

                user_to_num_photos_uploaded = keysbyValue(user_to_num_photos_uploaded);

                //console.log("user_to_num_photos_uploaded");
                //console.log(user_to_num_photos_uploaded);

                //console.log("sorted_keys");
                //console.log(sorted_keys);

                //console.log("sorted_values");
                //console.log(sorted_values);

                for (var i=0; i<20; i++){
                    facebook_ids_to_tags[i] = { "Facebook ID":sorted_keys[i], "Number of Photo Tags":sorted_values[i] };
                }
//            console.log("facebook_ids_to_tags");
//            console.log(facebook_ids_to_tags);

                callback();
                getPhotoLikesComments(photoResponse,callback);
            }
        });
    }


</script>


<!--################# START MAIN-WRAPPER ####################
	============================================================ -->
<div class="main-wrapper">

<!--
<!--START SCROLL EVENTS ELEMENTS
<!-- !!CLICK EVENT TOP SCROLL
<div class="top-link-click right hidden-phone"></div>
<!-- !!HOVER EVENT TOP SCROLL
<div class="top-link right hidden-phone"></div>
<!-- !!HOVER EVENT TOP SCROLL
<div class="bottom-link right hidden-phone"></div>
<!-- !!CLICK EVENT TOP SCROLL
<div class="bottom-link-click right hidden-phone"></div>
<div class="top-corner"></div>
<div class="bottom-corner"></div>
<!--/. SCROLL EVENTS ELEMENTS
-->

<!-- ######################  START HEADER ######################
    ==============================================================-->
<header class="headertop needhead" id="header-section">

  <!-- START PARALLAX BG -->
  <div class="innerbg">

    <div class="leftbg"></div>


    <!-- ###################### START TOP MENU ####################
        ============================================================== -->

    <div class="nav-top">
      <!-- navbar-fixed-top -->
      <div class="navbar navbar-fixed-top navbar-inverse" id="top-nav">
        <!-- INNER-->
        <div class="navbar-inner">
          <div class="container">

            <!-- Collapse button -->
            <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
            <!-- LOGO -->
            <a class="brand" href="#header-section">
              <span><img src="assets/small_logo.png">STALKERSTATS</span>
              <!--<img src="assets/logo.png" alt="Logo">--></a>

            <!-- TOP NAVIGATION-->
            <div id="main-nav" class="scroller-spy">
              <nav id="myScrollspy" class="nav-collapse collapse" >
                <ul class="nav pull-right" id="nav">
                  <li><a href="#header-section" id = "home-btn" style="visibility:hidden">Home</a> </li>
                  <li><a href="#photos-section" id = "photos-btn" style="visibility:hidden">Photos</a> </li>
                  <li><a href="#status-section" id = "status-btn" style="visibility:hidden">Statuses</a> </li>
                  <li><a href="#rankings-section" id = "rankings-btn" style="visibility:hidden">Rankings</a> </li>
                  <li><a href="#team-section" id = "team-btn" style="visibility:hidden">Our team</a> </li>
                  <li><a href="#contact-section" id = "contact-btn" style="visibility:hidden">Contact</a> </li>
                </ul>
              </nav>
            </div>

          </div>
        </div>
      </div>
    </div>
    <!-- ############################ END TOP MENU ###############
        ========================================================== -->

    <!-- HEADER MAIN-->
    <div class="hero-unit">
      <div class="container">
        <div class="row-fluid">
          <div class="text-center">
            <hr class="half">
            <h1 class="">Stalker Stats</h1>
            <h2 class="text-center">
              <span class="get-it">See who likes your photos the most, who comments the most, and more!</span>
            </h2>
            <hr class="half">
            <div class="camein">
              <p class="">

                <!--
                  Below we include the Login Button social plugin. This button uses the JavaScript SDK to
                  present a graphical Login button that triggers the FB.login() function when clicked. -->
                <fb:login-button show-faces="false" autologoutlink="true" size="xlarge" width="200" max-rows="1" auto-logout="true" scope="user_photos,friends_photos,user_status,friends_status,read_stream,user_location,user_checkins"></fb:login-button>

                <!--<a href="#" class="btn btn-large btn-info" title="">LOGIN WITH FACEBOOK</a>-->
                <!--<i class="or">- or -</i>-->
                <!--<a href="#" class="btn btn-large btn-block-third btn-warning" title="">FUCKING SEND IT</a>-->
              </p>

            </div>
            <a href="#" class="btn btn-success btn-large" onclick="window.open('https://docs.google.com/forms/d/1YVUbUXwQQzoDdSLiqv8lt02F8Mfo8Rrj_rWhWxlEhD4/viewform?usp=send_form'); return false;">Give us Feedback!</a>



          </div>
        </div>

      </div>
    </div>
    <div class="splash" id="splash" style="visibility:hidden">
        <h1 class="loading">Analyzing Your Profile...</h1>
         <ul class="bokeh">
            <li></li>
            <li></li>
            <li></li>
            <li></li>
         </ul>
    </div>



  </div><!--/ END PARALLAX BG-->

</header>
<!-- / ###################### END MAIN HEADER ####################
	=============================================================== -->


<section id = "mainbody" style = "display:none">

<!-- ######################## INTRO SECTION ##################
============================================================== -->

<!-- MARKETING INTRO-->
<div class="container">
  <div class="row-fluid">
    <header class="page-header span12">
      <h3> Stalker Stats <small class="visible-desktop">// Find out who has been Stalking you!</small> </h3>
      <h4>
        What is Stalker Stats?
      </h4>
        Welcome to Stalker Stats! We pull data from your Facebook profile to show you which of your friends is interacting with you the most!
        Stalker metrics are pulled from photos you've been tagged in and statuses you've posted. We then use an algorithm to show you your top Stalkers!
        <p></p>
          <!--<h4>-->
            <!--Who's considered a Stalker?-->
          <!--</h4>-->
            <!--We've defined stalkers to be people who tag, comment, and like Facebook events related to you. Basically, the people who care about what you do and say.-->
      <!--<p></p>-->


<!--/ MARKETING INTRO-->
<div class="container">

  <!-- FEATURES ITEMS-->
  <div class="row demo-tiles" id="show3">

    <!-- FEATURE ITEM-->
    <div class="span3">
      <div class="feature-box">
        <img id="feature-item-1" class="feature-box-image" alt="" src= "" >
      </div>
    </div>
    <!-- / FEATURE ITEM-->

    <!-- FEATURE ITEM-->
    <div class="span3">
      <div class="feature-box">
        <img id="feature-item-2" class="feature-box-image" alt="" src="">
      </div>
    </div>
    <!-- / FEATURE ITEM-->

    <!-- FEATURE ITEM-->
    <div class="span3">
      <div class="feature-box">
        <img id="feature-item-3" class="feature-box-image" alt="" src="">
      </div>
    </div>
    <!--/ FEATURE ITEM-->

    <!-- FEATURE ITEM-->
    <div class="span3">
      <div class="feature-box feature-box-hot">
        <img id="feature-item-4" class="feature-box-image" alt="" src="">
      </div>
    </div>
    <!--/ FEATURE ITEM-->
  </div> <!-- / ROW-->
</div> <!-- CONTAINER-->

        <h4>
            Scroll down to see your stats!
        </h4>
        <!--<h4>-->
          <!--Are you saving my Data?-->
        <!--</h4>-->
        <!--Don't worry, we don't save any of your data. All data is refreshed every time you navigate away from or refresh the page!-->
        <!--<p></p>-->
        <!--<h4>-->
          <!--Questions or Comments?-->
        <!--</h4>-->
        <!--Email us at <a href="mailto:stalker.stats@umich.edu" target="_top">stalker.stats@umich.edu</a>-->

    </header>
  </div>
</div>

<!-- ######################## PHOTOS SECTION ##################
============================================================== -->

<section  id="photos-section">

  <div class="container">
    <div class="row-fluid">
      <header class="page-header span12">
        <h3> Photos Metrics <small class="visible-desktop">// Check out graphs based on Photos</small> </h3>
      </header>
    </div>
  </div>

  <div class="panel">
    <div class="container">
      <div class="row-fluid">
        <div class="span12 text-center">
			
			<span> Who do you think has tagged you the most in pictures?
				<span class="inner">This graph shows the number of tags per person!</span>
              <!--<div class="chart2"></div>-->
            <svg id="chart2" width="1000" height="600"
                 viewBox="0 0 1000 600"
                 preserveAspectRatio="xMidYMid">
            </svg>
                  <h4>Click on a bar to see what they've tagged you in most recently!</h4>

                <script>

                    function makeGraph() {

                        var current_selected_bar;
                        var previous_selected_x;
                        var previous_colors;
                        var tray_closed = true;

                        getUsersStatusLikes(finishStatusGraph);

                        // CHART USING D3 AND DIMPLY: PRETTY
                        var svg = dimple.newSvg("#chart2", 1000, 550);

                        var chart = new dimple.chart(svg, facebook_ids_to_tags);
                        var x = chart.addCategoryAxis("x", "Facebook ID");
//                        x.tickFormat = "%20.10s";
                        var y = chart.addMeasureAxis("y", "Number of Photo Tags");
                        y.tickFormat = "i";
                        var s = chart.addSeries("Facebook ID", dimple.plot.bar);
                        s.addEventHandler("click", function (e) {

//                            alert("Hey, you clicked " + e.seriesValue + ". Woooooo!");
                            svg.attr("height", 550);

                            if(facebook_ids_to_tagged_photos[e.seriesValue].length > 0){
                                document.getElementById('tagged-photo-1').src = facebook_ids_to_tagged_photos[e.seriesValue][0];
                                document.getElementById('tagged-link-1').href = facebook_ids_to_tagged_photo_urls[e.seriesValue][0];
                                jQuery('#tagged-photo-box-1').show();
                            }
                            else{
                                jQuery('#tagged-photo-box-1').hide();
                                document.getElementById('tagged-photo-1').src = "";
                                document.getElementById('tagged-link-1').href = "";
                            }
                            if(facebook_ids_to_tagged_photos[e.seriesValue].length > 1){
                                document.getElementById('tagged-photo-2').src = facebook_ids_to_tagged_photos[e.seriesValue][1];
                                document.getElementById('tagged-link-2').href = facebook_ids_to_tagged_photo_urls[e.seriesValue][1];
                                jQuery('#tagged-photo-box-2').show();
                            }
                            else{
                                jQuery('#tagged-photo-box-2').hide();
                                document.getElementById('tagged-photo-2').src = "";
                                document.getElementById('tagged-link-2').href = "";
                            }
                            if(facebook_ids_to_tagged_photos[e.seriesValue].length > 2){
                                document.getElementById('tagged-photo-3').src = facebook_ids_to_tagged_photos[e.seriesValue][2];
                                document.getElementById('tagged-link-3').href = facebook_ids_to_tagged_photo_urls[e.seriesValue][2];
                                jQuery('#tagged-photo-box-3').show();
                            }
                            else{
                                jQuery('#tagged-photo-box-3').hide();
                                document.getElementById('tagged-photo-3').src = "";
                                document.getElementById('tagged-link-3').href = "";
                            }
                            if(facebook_ids_to_tagged_photos[e.seriesValue].length > 3){
                                document.getElementById('tagged-photo-4').src = facebook_ids_to_tagged_photos[e.seriesValue][3];
                                document.getElementById('tagged-link-4').href = facebook_ids_to_tagged_photo_urls[e.seriesValue][3];
                                jQuery('#tagged-photo-box-4').show();
                            }
                            else{
                                jQuery('#tagged-photo-box-4').hide();
                                document.getElementById('tagged-photo-4').src = "";
                                document.getElementById('tagged-link-4').href = "";
                            }
                            if(facebook_ids_to_tagged_photos[e.seriesValue].length > 4){
                                document.getElementById('tagged-photo-5').src = facebook_ids_to_tagged_photos[e.seriesValue][4];
                                document.getElementById('tagged-link-5').href = facebook_ids_to_tagged_photo_urls[e.seriesValue][4];
                                jQuery('#tagged-photo-box-5').show();
                            }
                            else{
                                jQuery('#tagged-photo-box-5').hide();
                                document.getElementById('tagged-photo-5').src = "";
                                document.getElementById('tagged-link-5').href = "";
                            }
                            if(facebook_ids_to_tagged_photos[e.seriesValue].length > 5){
                                document.getElementById('tagged-photo-6').src = facebook_ids_to_tagged_photos[e.seriesValue][5];
                                document.getElementById('tagged-link-6').href = facebook_ids_to_tagged_photo_urls[e.seriesValue][5];
                                jQuery('#tagged-photo-box-6').show();
                            }
                            else{
                                jQuery('#tagged-photo-box-6').hide();
                                document.getElementById('tagged-photo-6').src = "";
                                document.getElementById('tagged-link-6').href = "";
                            }
//                            var text = "Photos you're tagged in by " + (e.SeriesValue).toString();
//                            jQuery('#tagged-photo-text').text(text);
//                            tagged-photo-text.innerHTML = "Photos you're tagged in by " + e.SeriesValue;
//                            fieldNameElement.innerHTML = "Ny new text!";

                            if(String(current_selected_bar) == String(e.seriesValue)){
                                // Clicked same bar, close or open tray
                                if (jQuery('#collapseOne').hasClass('in')) {
                                    // tray is open, close tray
                                    jQuery('#collapseOne').collapse('hide');
                                    //Unhighlight the bar
                                    if(previous_selected_x){
                                        chart.assignColor(previous_selected_x, previous_colors.fill, previous_colors.stroke, previous_colors.opacity);

                                        x.shapes.selectAll('.tick').each(function(d, i) {
                                            if(d == String(previous_selected_x)) {
                                                d3.select(this)
                                                        .selectAll('text')
                                                        .style("font-weight", "normal")
                                            }
                                        });
                                    }
                                }
                                else{
                                    // tray is closed, open tray
                                    jQuery('#collapseOne').collapse('show');
                                    //Highlight the bar
                                    chart.assignColor(e.xValue, chart.getColor(e.xValue).stroke, "black", 1);
                                    //Iterate through ticks, make right one bold
                                    x.shapes.selectAll('.tick').each(function(d, i) {
                                        if(d == String(e.xValue)) {
                                            d3.select(this)
                                                    .selectAll('text')
                                                    .style("font-weight", "bold")
                                        }
                                    });
                                    //Scroll to accordian
                                    jQuery('html, body').animate({
                                        scrollTop: jQuery("#collapseOne").offset().top - 200
                                    }, {duration: 375}, 2500);
                                }
                            }
                            else if(current_selected_bar == null){
                                //Store the original tag name and colors of the selectedbar
                                previous_selected_x = e.xValue;
                                previous_colors = chart.getColor(e.xValue);
                                //Highlight bar
                                chart.assignColor(e.xValue, chart.getColor(e.xValue).stroke, "black", 1);
                                //Iterate through ticks and highlight new selection
                                x.shapes.selectAll('.tick').each(function(d, i) {
                                    if(d == String(e.xValue)) {
                                        d3.select(this)
                                                .selectAll('text')
                                                .style("font-weight", "bold")
                                    }
                                });
                                // no bar selected yet, open tray
                                jQuery('#collapseOne').collapse('show');
//                              //Scroll to accordian
                                jQuery('html, body').animate({
                                    scrollTop: jQuery("#collapseOne").offset().top - 200
                                }, {duration: 375}, 2500);
                            }
                            else if(String(current_selected_bar) != String(e.seriesValue)){
                                //Reset old bar to non-highlight
                                if(previous_selected_x)
                                    chart.assignColor(previous_selected_x, previous_colors.fill, previous_colors.stroke, previous_colors.opacity);
                                //Store the original tag name and colors of newly selected bar
                                //Iterate through ticks, unbold old selection, bold new selection
                                x.shapes.selectAll('.tick').each(function(d, i) {
                                    if(previous_selected_x && d == String(previous_selected_x)){
                                        d3.select(this)
                                                .selectAll('text')
                                                .style("font-weight", "normal")
                                    }

                                    if(d == String(e.xValue)) {
                                        d3.select(this)
                                                .selectAll('text')
                                                .style("font-weight", "bold")
                                    }
                                });
                                previous_selected_x = e.xValue;
                                previous_colors = chart.getColor(e.xValue);
                                //Highlight new bar
                                chart.assignColor(e.xValue, chart.getColor(e.xValue).stroke, "black", 1);
                                //Scroll to accordian
                                jQuery('html, body').animate({
                                    scrollTop: jQuery("#collapseOne").offset().top - 200
                                }, {duration: 375}, 2500);
                                // Selecting new bar
                                if (jQuery('#collapseOne').hasClass('in')) {
                                    // tray is open, do not change tray
                                }
                                else{
                                    // tray is closed, open tray
                                    jQuery('#collapseOne').collapse('show');
                                }
                            }
                            current_selected_bar = e.seriesValue;


                            chart.draw();
                            chart.setMargins(60,50,50,150);
                            x.shapes.selectAll("text").attr("transform",
                                    function (d) {
                                        return d3.select(this).attr("transform") + " translate(27, 36) rotate(-135)";
                                    });
                            x.shapes.selectAll("text").style("text-anchor", "end");
                            x.titleShape.remove();

                            y.titleShape.attr("transform",
                                    function (d) {
                                        return d3.select(this).attr("transform") + " translate(-10, -4) rotate(0)";
                                    })

                            svg.attr("height", 600);

                        });

                        var chartObject = chart.draw();
                        chart.setMargins(60,50,50,150);
                        x.shapes.selectAll("text").attr("transform",
                                function (d) {
                                    return d3.select(this).attr("transform") + " translate(0, 15) rotate(-45)";
                                });
                        x.shapes.selectAll("text").style("text-anchor", "end");
                        x.titleShape.remove();

                        y.titleShape.attr("transform",
                                function (d) {
                                    return d3.select(this).attr("transform") + " translate(0, -20) rotate(0)";
                                });
//                        d3.select("xAxis").attr("height", 600);

                        svg.attr("height", 600);

                        while(!chartObject){}
                        if (chartObject){
                            showButtons();
                        }


//                        document.getElementById('category-1').class = "accordion-body show";



                        // CHART USING ONLY D3: NOT PRETTY

//                        var x = d3.scale.linear()
//                                .domain([0, d3.max(sorted_values)])
//                                .range([0, 420]);
//
//                        d3.select(".chart")
//                                .selectAll("div")
//                                .data(sorted_values)
//                                .enter().append("div")
//                                .style("width", function(d) { return x(d) + "px"; })
//                                .text(function(d) {
//                                    console.log(d);
//                                    return d;
//                                });

//                        for(x in sorted_keys) {
//                            FB.api('/'+sorted_keys[x], function(response) {
//                                console.log("Name: "+response.name);
//                                console.log("Num Photos: "+sorted_values[x]);
//                                //need to add the names to the graph
//                            }, {scope: 'user_photos,friends_photos,user_status,friends_status'});
//                        }

                    }

                </script>


              <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                  <!--<div class="panel-heading">-->
                  <!--<h4 class="panel-title">-->
                  <!--<a data-toggle="collapse" data-parent="#accordion" href="#collapseOne">-->
                  <!--Collapsible Group Item #1-->
                  <!--</a>-->
                  <!--</h4>-->
                  <!--</div>-->

                  <div id="collapseOne" class="panel-collapse collapse">

                    <!--<div class="row demo-tiles" id="show3">-->
                    <div id="show3">
                      <!--<div width="10"></div>-->
                    <div class="span2">
                      <div id="tagged-photo-box-1" class="feature-box">
                        <a target="_blank" id="tagged-link-1" href=""><img id="tagged-photo-1" class="tagged-images" alt="" src="" href=""> </a>
                      </div>
                    </div>
                      <div class="span2">
                        <div id="tagged-photo-box-2" class="feature-box">
                          <a target="_blank" id="tagged-link-2" href=""><img id="tagged-photo-2" class="tagged-images" alt="" src="" href=""> </a>
                        </div>
                      </div>
                      <div class="span2">
                        <div id="tagged-photo-box-3" class="feature-box">
                          <a target="_blank" id="tagged-link-3" href=""><img id="tagged-photo-3" class="tagged-images" alt="" src="" href=""> </a>
                        </div>
                      </div>
                      <div class="span2">
                        <div  id="tagged-photo-box-4" class="feature-box">
                          <a target="_blank" id="tagged-link-4" href=""><img id="tagged-photo-4" class="tagged-images" alt="" src="" href=""> </a>
                        </div>
                      </div>
                      <div class="span2">
                        <div  id="tagged-photo-box-5" class="feature-box">
                          <a target="_blank" id="tagged-link-5" href=""><img id="tagged-photo-5" class="tagged-images" alt="" src="" href=""> </a>
                        </div>
                      </div>
                      <div class="span2">
                        <div  id="tagged-photo-box-6" class="feature-box">
                          <a target="_blank" id="tagged-link-6" href=""><img id="tagged-photo-6" class="tagged-images" alt="" src="" href=""> </a>
                        </div>
                      </div>
                    </div>
                  </div>

                </div>
              </div>

			</span>
            <span> Who do you think has liked the most pictures of you?
				<span class="inner">This graph shows the number of likes per person!</span>
                <svg id="photoLikesChart" width="1000" height="600"
                     viewBox="0 0 1000 600"
                     preserveAspectRatio="xMidYMid">
                </svg>
                                <h4>Click on a bar to see what they've liked most recently!</h4>

                <div class="panel-group" id="accordionPhotoLikes">
                  <div class="panel panel-default">

                    <div id="collapsePhotoLikes" class="panel-collapse collapse">

                      <!--<div class="row demo-tiles" id="show3">-->
                      <div id="showPhotoLikes">
                        <!--<div width="10"></div>-->
                        <div class="span2">
                          <div id="liked-photo-box-1" class="feature-box">
                            <a target="_blank" id="liked-link-1" href=""><img id="liked-photo-1" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div id="liked-photo-box-2" class="feature-box">
                            <a target="_blank" id="liked-link-2" href=""><img id="liked-photo-2" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div id="liked-photo-box-3" class="feature-box">
                            <a target="_blank" id="liked-link-3" href=""><img id="liked-photo-3" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div  id="liked-photo-box-4" class="feature-box">
                            <a target="_blank" id="liked-link-4" href=""><img id="liked-photo-4" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div  id="liked-photo-box-5" class="feature-box">
                            <a target="_blank" id="liked-link-5" href=""><img id="liked-photo-5" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div  id="liked-photo-box-6" class="feature-box">
                            <a target="_blank" id="liked-link-6" href=""><img id="liked-photo-6" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                      </div>
                    </div>

                  </div>
                </div>
            </span>

            <span> Who do you think has commented on the most pictures of you?
				<span class="inner">This graph shows the number of comments per person!</span>
                <svg id="photoCommentsChart" width="1000" height="600"
                     viewBox="0 0 1000 600"
                     preserveAspectRatio="xMidYMid">
                </svg>
                                <h4>Click on a bar to see what they've commented on most recently!</h4>

                <div class="panel-group" id="accordionPhotoComments">
                  <div class="panel panel-default">

                    <div id="collapsePhotoComments" class="panel-collapse collapse">

                      <!--<div class="row demo-tiles" id="show3">-->
                      <div id="showPhotoComments">
                        <!--<div width="10"></div>-->
                        <div class="span2">
                          <div id="commented-photo-box-1" class="feature-box">
                            <a target="_blank" id="commented-link-1" href=""><img id="commented-photo-1" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div id="commented-photo-box-2" class="feature-box">
                            <a target="_blank" id="commented-link-2" href=""><img id="commented-photo-2" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div id="commented-photo-box-3" class="feature-box">
                            <a target="_blank" id="commented-link-3" href=""><img id="commented-photo-3" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div  id="commented-photo-box-4" class="feature-box">
                            <a target="_blank" id="commented-link-4" href=""><img id="commented-photo-4" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div  id="commented-photo-box-5" class="feature-box">
                            <a target="_blank" id="commented-link-5" href=""><img id="commented-photo-5" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                        <div class="span2">
                          <div  id="commented-photo-box-6" class="feature-box">
                            <a target="_blank" id="commented-link-6" href=""><img id="commented-photo-6" class="tagged-images" alt="" src="" href=""> </a>
                          </div>
                        </div>
                      </div>
                    </div>

                  </div>
                </div>
            </span>
        </div>
      </div>
    </div>
  </div>


  <!--<div class="container">-->
    <!--<div class="row-fluid features-more o-hidden" >-->
      <!--<div class="span6 shadow-right">-->
        <!--<h3>Responsive &amp; Flexible</h3>-->
        <!--<p class="lead">-->
          <!--BootScroller looks good on all devices and all major browsers. The structure created by today's standards one-page sites. Based on the latest version of the bootstrap is easy to grow and develop. The template contains a simple library for CSS3 animations.-->
        <!--</p>-->
      <!--</div>-->

      <!--<div class="span6 relative hidden-phone">-->
        <!--<img class="showthis" id="show1" src="assets/responsive.png" alt="" />-->
      <!--</div>-->
    <!--</div>-->

    <!--<div class="row-fluid features-more o-hidden">-->
      <!--<div class="span6 relative hidden-phone">-->
        <!--<img class="showthis" id="show2" src="assets/crystal.png" alt=""/>-->
      <!--</div>-->
      <!--<div class="span6">-->
        <!--<h3>Crystal clear &amp; Flat</h3>-->
        <!--<p class="lead">-->
          <!--Its design is inspired by clear trends of modern web. BootScroller based on FlatUI and has a library of components for rapid growth and development of your project simple with minimal time.-->
        <!--</p>-->
      <!--</div>-->
    <!--</div>-->

  <!--</div>&lt;!&ndash; /SERVICE CONTAINER&ndash;&gt;-->
</section>
<!-- / ##################### FEATURES section ###########
	====================================================== -->



<!-- ################## PORTFOLIO SECTION #################
	======================================================= -->
<section id="status-section">


<!-- PORTFOLIO  HEADER -->
<!-- HERE TITLE GOES WITH FILTERS MENU IN RIGHT SIDE-->
<header class="page-header">
  <div class="container">
    <div class="row-fluid">

      <header class="page-header span12">
        <h3> Status Metrics <small class="visible-desktop">// Check out graphs based on Status's</small> </h3>
      </header>



    </div><!--/ROW-->
  </div><!--/CONTAINER-->
</header><!-- / PORTFOLIO SECTION HEADER-->

<div class="panel">
  <div class="container">
    <div class="row-fluid">
      <div class="span12 text-center">

        <span> Who do you think has commented on your statuses the most?
	      <span class="inner">This graph shows the number of comments per person on all statuses!</span>

          <svg id="chart4" width="1000" height="600"
               viewBox="0 0 1000 600"
               preserveAspectRatio="xMidYMid">
          </svg>
          <script>
              var current_selected_bar;
              var tray_closed = true;

              function makeStatusCommentGraph(){

                      // CHART USING D3 AND DIMPLY: PRETTY
                      var svg = dimple.newSvg("#chart4", 1000, 500);
                      var chart = new dimple.chart(svg, facebook_ids_to_status_commented );
//                      console.log('made');
                      var x = chart.addCategoryAxis("x", "Facebook ID");
////                        x.tickFormat = "%20.10s";
                      var y = chart.addMeasureAxis("y", "Number of Posts Commented");
//                  y.tickFormat = "i";
                      var s = chart.addSeries("Facebook ID", dimple.plot.bar);

                      //click event handler code here

//                      console.log('draw');
                      var postLikesChart = chart.draw();
                      //chart.setMargins(60,50,50,100);
//                      console.log('done');
                      x.shapes.selectAll("text").attr("transform",
                              function (d) {
                                  return d3.select(this).attr("transform") + " translate(0, 15) rotate(-45)";
                              });
                      x.shapes.selectAll("text").style("text-anchor", "end");
                      x.titleShape.remove();

                      y.titleShape.attr("transform",
                              function (d) {
                                  return d3.select(this).attr("transform") + " translate(0, -20) rotate(0)";
                              });

                      svg.attr("height", 600);


                      while(!postLikesChart){}
                      if (postLikesChart){
                          showButtons();
                      }
              }
          </script>
        </span>


	    <span> Who do you think has liked your statuses the most?
	      <span class="inner">This graph shows the number of likes per person on all statuses!</span>
          <svg id="chart3" width="1000" height="600"
               viewBox="0 0 1000 600"
               preserveAspectRatio="xMidYMid">
          </svg>

          <script>

              function makeStatusGraph(){
                  var current_selected_bar;
                  var tray_closed = true;

                  // CHART USING D3 AND DIMPLY: PRETTY
                  var svg = dimple.newSvg("#chart3", 1000, 500);

                  var chart = new dimple.chart(svg, facebook_ids_to_likes);
//                  console.log('made');
                  var x = chart.addCategoryAxis("x", "Facebook ID");
////                        x.tickFormat = "%20.10s";
                  var y = chart.addMeasureAxis("y", "Number of Posts Liked");
//                  y.tickFormat = "i";
                  var s = chart.addSeries("Facebook ID", dimple.plot.bar);

                    //click event handler code here
//                  s.addEventHandler("click", function (e) {
//
//
//                  }


//                   console.log('draw');
                  var postLikesChart = chart.draw();
//                   console.log('done');
                  //chart.setMargins(60,50,50,100);
                  x.shapes.selectAll("text").attr("transform",
                          function (d) {
                              return d3.select(this).attr("transform") + " translate(0, 15) rotate(-45)";
                          });
                  x.shapes.selectAll("text").style("text-anchor", "end");
                  x.titleShape.remove();

                  y.titleShape.attr("transform",
                          function (d) {
                              return d3.select(this).attr("transform") + " translate(0, -20) rotate(0)";
                          });

                  svg.attr("height", 600);

                  while(!postLikesChart){}
                  if (postLikesChart){
                      showButtons();
                  }
              }

          </script>
        </span>

        <span> Who do you think has tagged you the most in statuses?
	      <span class="inner">This graph shows the number of tags per person in all their statuses!</span>

                                    <div id="splash2" style="visibility:visible">
                                      <div id = "temp">

                                      <h1 class="loading"></h1>

                                      <ul class="bokeh">
                                        <li></li>
                                        <li></li>
                                        <li></li>
                                        <li></li>
                                      </ul>
                                        <h2 >Still Loading! </h2>
                                        <h4>Feel free to play with other parts of the site while this finishes!</h4>
                                        </div>
                                    </div>

          <svg id="chart5"
               width="0" height="0">
               <!--viewBox="0 0 1000 600"-->
               <!--preserveAspectRatio="xMidYMid"-->
          </svg>


          <script>

              function makeTaggedStatusGraph(){
                  var current_selected_bar;
                  var tray_closed = true;

                  var div = document.getElementById("temp");
                  div.parentNode.removeChild(div);

                  get_stalker_rankings();

                  var svg_chart5 = document.getElementById("chart5");
                  svg_chart5.style.width = "1000";
                  svg_chart5.style.height = "600";
                  svg_chart5.style.viewBox = "0 0 1000 600";
                  svg_chart5.style.preservAspectRation="xMidYMid";

                  var svg = dimple.newSvg("#chart5", 1000, 500);

                  var chart = new dimple.chart(svg, facebook_ids_to_status_tagged);
//                  console.log('made');
                  var x = chart.addCategoryAxis("x", "Facebook ID");
////                        x.tickFormat = "%20.10s";
                  var y = chart.addMeasureAxis("y", "Number of Statuses Tagged");
//                  y.tickFormat = "i";
                  var s = chart.addSeries("Facebook ID", dimple.plot.bar);

                  //click event handler code here
//                  s.addEventHandler("click", function (e) {
//
//
//                  }
                  var postLikesChart = chart.draw();
                  chart.setMargins(60,50,50,100);
//                  console.log('done');
                  //chart.setMargins(60,50,50,100);

                  x.shapes.selectAll("text").attr("transform",
                          function (d) {
                              return d3.select(this).attr("transform") + " translate(27, 36) rotate(-135)";
                          });
                  x.shapes.selectAll("text").style("text-anchor", "end");
                  x.titleShape.remove();

                  y.titleShape.attr("transform",
                          function (d) {

//                              return d3.select(this).attr("transform") + " translate(-10, -4) rotate(0)";
//                          })

                              return d3.select(this).attr("transform") + " translate(0, -20) rotate(0)";
                          });

                  svg.attr("height", 600);

                  while(!postLikesChart){}
                  if (postLikesChart){
                      showButtons();
                  }
              }
          </script>
        </span>

      </div>
    </div>
  </div>
</div>
</section><!--/ portfolio section-->


<section id="rankings-section">
  <!-- ################ PRICE SECTION HEADER ############# -->

  <div class="container">
    <div class="row-fluid">
      <header class="page-header span12">
        <h3> Stalker Rankings <small class="visible-desktop">// Stalker Scores based on all the graphs</small> </h3>
      </header>


          <div id="splash3" style="visibility:visible">
            <div id = "temp2">
              <br><br><br><br><br>
              <h1 class="loading"></h1>
              <ul class="bokeh">
                <li></li>
                <li></li>
                <li></li>
                <li></li>
              </ul>
                <h2 class = "text-center" >Still Loading! </h2>
                <h4 class = "text-center">Once the graphs finish loading your stalker rankings will appear here!!</h4>
            </div>
          </div>



 <div id = "all rankings" style = "display:none">
      <div class="row demo-tiles" id="show3">
        <div class="span1"></div>
        <div class="span2">
          <div class="forth">
            <p>4th</p>
          </div>
        </div>
        <div class="span2">
          <div class="second">
            <p>2nd</p>
          </div>
        </div>
        <div class="span2">
          <div class="first">
            <p>1st</p>
          </div>
        </div>
        <div class="span2">
          <div class="third">
            <p>3rd</p>
          </div>
        </div>
        <div class="span2">
          <div class="fifth">
            <p>5th</p>
          </div>
        </div>
      </div>
<p></p>
      <div class="row demo-tiles" id="show3">
        <div class="span1"></div>
        <div class="span2">
          <a target="_blank" id="ranked-user-url-4" href="">
            <div class="rank-box">
              <img id="ranked-user-4" class="rank-box-image" alt="" src= "" >
              <h4 id="ranked-user-text-4" class="btn btn-forth btn-large btn-block" href=""></h4>
              <h4 id="ranked-user-score-4" class=feature-box-title"></h4>
            </div>
          </a>
        </div>
        <div class="span2">
          <a target="_blank" id="ranked-user-url-2" href="">
            <div class="rank-box">
                <img id="ranked-user-2" class="rank-box-image" alt="" src= "" >
              <h4 id="ranked-user-text-2" class="btn btn-second btn-large btn-block" href=""></h4>
              <h4 id="ranked-user-score-2" class=feature-box-title"></h4>
            </div>
          </a>
        </div>
        <div class="span2">
          <a target="_blank" id="ranked-user-url-1" href="">
            <div class="rank-box">
              <img id="ranked-user-1" class="rank-box-image" src= "" >
              <h4 id="ranked-user-text-1" class="btn btn-first btn-large btn-block" href=""></h4>
              <h4 id="ranked-user-score-1" class=feature-box-title"></h4>
            </div>
          </a>
        </div>
        <div class="span2">
          <a target="_blank" id="ranked-user-url-3" href="">
            <div class="rank-box">
              <img id="ranked-user-3" class="rank-box-image" alt="" src= "" >
              <h4 id="ranked-user-text-3" class="btn btn-third btn-large btn-block" href=""></h4>
              <h4 id="ranked-user-score-3" class=feature-box-title"></h4>
            </div>
          </a>
        </div>
        <div class="span2">
          <a target="_blank" id="ranked-user-url-5" href="">
            <div class="rank-box">
              <img id="ranked-user-5" class="rank-box-image" alt="" src= "" >
              <h4 id="ranked-user-text-5" class="btn btn-fifth btn-large btn-block" href=""></h4>
              <h4 id="ranked-user-score-5" class=feature-box-title"></h4>
            </div>
          </a>
        </div>
      </div>
      </div>
      <img id="hidden-background-image" src="http://stalker-stats.herokuapp.com/assets/headerbg.png" style="display: none;" />
      <!--<header class="page-header span12">-->
      <h2 class="text-center">
        <!--<p></p>-->
        <!--<div class="fb-like-box" data-href="https://www.facebook.com/StalkerStats" data-width="200" data-height="100" data-colorscheme="light" data-show-faces="false" data-header="false" data-stream="false" data-show-border="false"></div>-->
        <!--<div class="fb-share-button" data-href="https://www.facebook.com/stalkerstats" data-width="100" data-type="button_count"></div>-->
      <!--<iframe class="fbiframe">-->
        <!--<html>-->
        <!--<body>-->
        <!--<div style='text-align: center;' class="fb-like" data-href="https://www.facebook.com/stalkerstats" data-layout="standard" data-action="like" data-show-faces="false" data-share="true"></div>-->
        <!--&lt;!&ndash;</body>&ndash;&gt;<i class="fa-icon-facebook"></i>-->
        <!--</html>-->
      <!--</iframe>-->
        <p></p>
        <!--<div height="25px"></div>-->
        <a href="#" class="btn btn-primary btn-large" onclick="window.open('http://www.facebook.com/sharer.php?u=http://stalker-stats.herokuapp.com', 'Share on Facebook', 'width=600, height=350'); return false;"><i class="icon-white icon-facebook fa-icon-facebook"></i> Share</a>
        <a href="#" class="btn btn-primary btn-large" onclick="window.open('http://facebook.com/StalkerStats'); return false;"><i class="icon-white icon-facebook fa-icon-facebook"></i> Like </a>

        <!--<a id="share-button" class="btn btn-primary btn-large btn-block" href="">Share on Facebook</a>-->

        <!--<script>-->
<!--//            function fbs_click() {-->
<!--//                var u="http://stalker-stats.herokuapp.com";-->
<!--//                var t="Stalker Stats";-->
<!--//                var i=document.getElementById('hidden-background-image').src;-->
<!--//                window.open('http://www.facebook.com/sharer.php?u='+encodeURIComponent(u)+'&t='+encodeURIComponent(t)+'&i='+encodeURIComponent(i),'sharer','toolbar=0,status=0,width=626,height=436');-->
<!--//                return false;-->
<!--//            }-->
        <!--</script>-->

        <!--<a href="http://www.facebook.com/share.php?u=http://stalker-stats.herokuapp.com" onClick="return fbs_click()" target="_blank" title="Share This on Facebook">-->
        <!--<img src="http://stalker-stats.herokuapp.com/assets/headerbg.png" alt="facebook" width="20" height="20" border="0" />-->
        <!--</a>-->

        <!--<div class="fb-like btn btn-large btn-primary" data-href="#"-->
             <!--data-width="550" data-layout="button" data-show-faces="true"-->
             <!--data-share="false"></div>-->
      </h2>
      <!--</header>-->

      <script>

        function get_stalker_rankings(){
         // Burger

//            var YOUR_TITLE = "Stalker Stats";
//            var YOUR_SUMMARY = "This project is a web app for viewing interesting analytics based on Facebook interactions. User's log into their Facebook accounts which then triggers graphs to be displayed showing information ranging from who tags them in the most photos to who likes their status' the most.";
//            var YOUR_URL = "http://stalker-stats.herokuapp.com";
//            var YOUR_IMAGE_TO_SHARE_OBJECT = "http://stalker-stats.herokuapp.com/assets/headerbg.png";
//            var sharebuttonurl = "http://www.facebook.com/sharer.php?s=100&title=" + encodeURIComponent(YOUR_TITLE) + "&summary="+encodeURIComponent(YOUR_SUMMARY)+"&url="+encodeURIComponent(YOUR_URL)+"&images="+encodeURIComponent(YOUR_IMAGE_TO_SHARE_OBJECT);
//            document.getElementById('share-button').href = sharebuttonurl;

            var div = document.getElementById("temp2");
            div.parentNode.removeChild(div);

            var ranking_div = document.getElementById("all rankings");
            ranking_div.style.display = '';

            // Photo Tags rankings: sorted_keys
            // Photo Likes rankings: photo_likes_sorted_ids
            // Photo Comments rankings: photo_comments_sorted_ids
            // Status Likes rankings: status_sorted_keys

            var score;

            // Add Photo Tag Scores
            score = 20;
            for(var i=0;i<20;i++){
                if (sorted_keys[i] in stalker_rankings) {
                    stalker_rankings[sorted_keys[i]] += score;
                    score = score - 1;
                }
                else{
                    stalker_rankings[sorted_keys[i]] = score;
                    score = score - 1;
                }
            }

            // Add Photo Like Scores
            score = 20;
            for(var i=0;i<20;i++){
                if (photo_likes_sorted_ids[i] in stalker_rankings) {
                    stalker_rankings[photo_likes_sorted_ids[i]] += score;
                }
                else{
                    stalker_rankings[photo_likes_sorted_ids[i]] = score;
                }
                score = score - 1;
            }

            // Add Photo Comment Scores
            score = 20;
            for(var i=0;i<20;i++){
                if (photo_comments_sorted_ids[i] in stalker_rankings) {
                    stalker_rankings[photo_comments_sorted_ids[i]] += score;
                }
                else{
                    stalker_rankings[photo_comments_sorted_ids[i]] = score;
                }
                score = score - 1;
            }

            // Add Status Like Scores
            score = 20;
            for(var i=0;i<20;i++){
                if (status_sorted_keys[i] in stalker_rankings) {
                    stalker_rankings[status_sorted_keys[i]] += score;
                }
                else{
                    stalker_rankings[status_sorted_keys[i]] = score;
                }
                score = score - 1;
            }

            // Add Status Like Scores
            score = 20;
            for(var i=0;i<20;i++){

                if (status_tagged_sorted_keys[i] in stalker_rankings) {
                    stalker_rankings[status_tagged_sorted_keys[i]] += score;
                }
                else{
                    stalker_rankings[status_tagged_sorted_keys[i]] = score;
                }
                score = score - 1;
            }

//            console.log("stalker_rankings");
//            console.log(stalker_rankings)

            function keysbyValue(O){
                var A= [];
                for(var p in O){
                    if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                }
                A.sort(function(a, b){
                    var a1= a[1], b1= b[1];
                    return b1 - a1;
                });
                for(var i= 0, L= A.length; i<L; i++){
                    A[i]= A[i][0];
                }
                var obj = {};
                for(var i= 0, L= A.length; i<L; i++){
                    obj[i] = {key: A[i], value: O[A[i]]};
                }
                return obj;
            }

            function getSortedKeys(O){
                var A= [];
                for(var p in O){
                    if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                }
                A.sort(function(a, b){
                    var a1= a[1], b1= b[1];
                    return b1 - a1;
                });
                for(var i= 0, L= A.length; i<L; i++){
                    A[i]= A[i][0];
                }
                return A;
            }

            function getSortedValues(O){
                var A= [];
                for(var p in O){
                    if(O.hasOwnProperty(p)) A.push([p, O[p]]);
                }
                A.sort(function(a, b){
                    var a1= a[1], b1= b[1];
                    return b1 - a1;
                });
                for(var i= 0, L= A.length; i<L; i++){
                    A[i]= A[i][1];
                }
                return A;
            }

            sorted_stalker_rankings_keys = getSortedKeys(stalker_rankings);

            sorted_stalker_rankings_values = getSortedValues(stalker_rankings);

            stalker_rankings = keysbyValue(stalker_rankings);

//            console.log("stalker_rankings sorted");
//            console.log(stalker_rankings);

            // Get profile pictures
            var name1 = stalker_rankings[0].key;
            jQuery('#ranked-user-text-1').text(name1);
            var score1 = "Stalker Score: " + stalker_rankings[0].value;
            jQuery('#ranked-user-score-1').text(score1);

//            console.log(name1);
            var query1 = "/fql?q=SELECT uid%2C name%2C pic_big FROM user WHERE uid IN %28SELECT uid2 FROM friend WHERE uid1 %3D me%28%29%29 AND name %3D%22" + name1 + "%22";

            FB.api(query1 , function(friend1) {
                // the response is different:
//                console.log(friend1);
                document.getElementById('ranked-user-1').src = friend1.data[0].pic_big;
                var url = "http://www.facebook.com/" + friend1.data[0].uid;
                document.getElementById('ranked-user-url-1').href = url;
            });

            var name2 = stalker_rankings[1].key;
            jQuery('#ranked-user-text-2').text(name2);
            var score2 = "Stalker Score: " + stalker_rankings[1].value;
            jQuery('#ranked-user-score-2').text(score2);

//            console.log(name2);
            var query2 = "/fql?q=SELECT uid%2C name%2C pic_big FROM user WHERE uid IN %28SELECT uid2 FROM friend WHERE uid1 %3D me%28%29%29 AND name %3D%22" + name2 + "%22";

            FB.api(query2 , function(friend2) {
                // the response is different:
//                console.log(friend2);
                document.getElementById('ranked-user-2').src = friend2.data[0].pic_big;
                var url = "http://www.facebook.com/" + friend2.data[0].uid;
                document.getElementById('ranked-user-url-2').href = url;
            });

            var name3 = stalker_rankings[2].key;
            jQuery('#ranked-user-text-3').text(name3);
            var score3 = "Stalker Score: " + stalker_rankings[2].value;
            jQuery('#ranked-user-score-3').text(score3);

//            console.log(name3);
            var query3 = "/fql?q=SELECT uid%2C name%2C pic_big FROM user WHERE uid IN %28SELECT uid2 FROM friend WHERE uid1 %3D me%28%29%29 AND name %3D%22" + name3 + "%22";

            FB.api(query3 , function(friend3) {
                // the response is different:
//                photoResponseg(friend3);
                document.getElementById('ranked-user-3').src = friend3.data[0].pic_big;
                var url = "http://www.facebook.com/" + friend3.data[0].uid;
                document.getElementById('ranked-user-url-3').href = url;
            });

            var name4 = stalker_rankings[3].key;
            jQuery('#ranked-user-text-4').text(name4);
            var score4 = "Stalker Score: " + stalker_rankings[3].value;
            jQuery('#ranked-user-score-4').text(score4);

//            console.log(name4);
            var query4 = "/fql?q=SELECT uid%2C name%2C pic_big FROM user WHERE uid IN %28SELECT uid2 FROM friend WHERE uid1 %3D me%28%29%29 AND name %3D%22" + name4 + "%22";

            FB.api(query4 , function(friend4) {
                // the response is different:
//                console.log(friend4);
                document.getElementById('ranked-user-4').src = friend4.data[0].pic_big;
                var url = "http://www.facebook.com/" + friend4.data[0].uid;
                document.getElementById('ranked-user-url-4').href = url;
            });

            var name5 = stalker_rankings[4].key;
            jQuery('#ranked-user-text-5').text(name5);
            var score5 = "Stalker Score: " + stalker_rankings[4].value;
            jQuery('#ranked-user-score-5').text(score5);

//            console.log(name5);
            var query5 = "/fql?q=SELECT uid%2C name%2C pic_big FROM user WHERE uid IN %28SELECT uid2 FROM friend WHERE uid1 %3D me%28%29%29 AND name %3D%22" + name5 + "%22";

            FB.api(query5 , function(friend5) {
                // the response is different:
//                console.log(friend5);
                document.getElementById('ranked-user-5').src = friend5.data[0].pic_big;
                var url = "http://www.facebook.com/" + friend5.data[0].uid;
                document.getElementById('ranked-user-url-5').href = url;
            });


        }

      </script>

    </div>
  </div>
  <!-- ################# PRICE SECTION #############
      ================================================ -->
  <div class="container" id="showprice">
    <div class="row-fluid text-center">


      <!--&lt;!&ndash; PRICE ITEM&ndash;&gt;-->
      <!--<div class="span3 feature-box price-feature-box">-->
        <!--<div class="pricing-table gray">-->
          <!--<div class="pricing-table-header">-->
            <!--<span class="price-header">Personal plan</span>-->
            <!--<span class="price-value">$<span>15</span><span class="mo">/mo</span></span>-->
          <!--</div>-->
          <!--<div class="pricing-table-space"></div>-->
          <!--<div class="pricing-table-features">-->
            <!--<p><strong>50</strong> Email Addresses</p>-->
            <!--<p><strong>35GB</strong> of Storage</p>-->
            <!--<p><strong>40</strong> Databases</p>-->
            <!--<p><strong>10</strong> Domains</p>-->
            <!--<p><strong>24/7 Unlimited</strong> Support</p>-->
          <!--</div>-->
          <!--<div class="pricing-table-sign-up">-->
            <!--<a href="#" class="btn btn-large btn-block btn-inverse">Sign Up Now</a>-->
          <!--</div>-->
        <!--</div>-->
      <!--</div>-->
      <!--&lt;!&ndash;/ PRICE ITEM&ndash;&gt;-->

      <!--&lt;!&ndash; PRICE ITEM&ndash;&gt;-->
      <!--<div class="span3 feature-box price-feature-box ">-->
        <!--<div class="pricing-table red">-->
          <!--<div class="pricing-table-header">-->
            <!--<span class="price-header">Personal plan</span>-->
            <!--<span class="price-value">$<span>15</span><span class="mo">/mo</span></span>-->
          <!--</div>-->
          <!--<div class="pricing-table-space"></div>-->
          <!--<div class="pricing-table-features">-->
            <!--<p><strong>50</strong> Email Addresses</p>-->
            <!--<p><strong>35GB</strong> of Storage</p>-->
            <!--<p><strong>40</strong> Databases</p>-->
            <!--<p><strong>10</strong> Domains</p>-->
            <!--<p><strong>24/7 Unlimited</strong> Support</p>-->
          <!--</div>-->
          <!--<div class="pricing-table-sign-up">-->
            <!--<a href="#" class="btn btn-large btn-danger btn-block">Sign Up Now</a>-->
          <!--</div>-->
        <!--</div>-->
      <!--</div>-->
      <!--&lt;!&ndash;/ PRICE ITEM&ndash;&gt;-->

      <!--&lt;!&ndash; PRICE ITEM&ndash;&gt;-->
      <!--<div class="span3 feature-box price-feature-box ">-->
        <!--<div class="pricing-table green">-->
          <!--<div class="pricing-table-header">-->
            <!--<span class="price-header">Personal plan</span>-->
            <!--<span class="price-value">$<span>15</span><span class="mo">/mo</span></span>-->
          <!--</div>-->
          <!--<div class="pricing-table-space"></div>-->
          <!--<div class="pricing-table-features">-->
            <!--<p><strong>50</strong> Email Addresses</p>-->
            <!--<p><strong>35GB</strong> of Storage</p>-->
            <!--<p><strong>40</strong> Databases</p>-->
            <!--<p><strong>10</strong> Domains</p>-->
            <!--<p><strong>24/7 Unlimited</strong> Support</p>-->
          <!--</div>-->
          <!--<div class="pricing-table-sign-up">-->
            <!--<a href="#" class="btn btn-large btn-success btn-block">Sign Up Now</a>-->
          <!--</div>-->
        <!--</div>-->
      <!--</div>-->
      <!--&lt;!&ndash;/ PRICE ITEM&ndash;&gt;-->

      <!--&lt;!&ndash; PRICE ITEM&ndash;&gt;-->
      <!--<div class="span3 feature-box price-feature-box feature-box-hot">-->
        <!--<div class="pricing-table dark-green">-->
          <!--<div class="pricing-table-header">-->
            <!--<span class="price-header">Personal plan</span>-->
            <!--<span class="price-value">$<span>15</span><span class="mo">/mo</span></span>-->
          <!--</div>-->
          <!--<div class="pricing-table-space"></div>-->
          <!--<div class="pricing-table-features">-->
            <!--<p><strong>50</strong> Email Addresses</p>-->
            <!--<p><strong>35GB</strong> of Storage</p>-->
            <!--<p><strong>40</strong> Databases</p>-->
            <!--<p><strong>10</strong> Domains</p>-->
            <!--<p><strong>24/7 Unlimited</strong> Support</p>-->
          <!--</div>-->
          <!--<div class="pricing-table-sign-up">-->
            <!--<a href="#" class="btn btn-large btn-primary btn-block">Sign Up Now</a>-->
          <!--</div>-->
        <!--</div>-->
      <!--</div>-->
      <!-- / PRICE ITEM-->

    </div><!-- / row-fluid-->
  </div><!-- / CONTAINER-->
</section>

<!-- ############### END PRICE SECTION #########
	================================================== -->

<!-- ##################### TEAM SECTION ###################
	======================================================= -->
<section class="" id="team-section">

<!-- TEAM HEADER-->
<header class="" >
  <div class="page-header ">
    <div class="container">
      <div class="row-fluid">
        <h3>OUR TEAM <small class="visible-desktop">// Who built this awesome project</small></h3>
      </div>
    </div>
  </div>
</header>
<!-- / TEAM HEADER-->

<!-- TEAM ITEMS -->
<div class="container">
<div class="row-fluid" id="show4">

  <!-- TEAM ITEM-->
  <div class="thumbnail span3">
    <!-- IMAGE CONTAINER-->
    <div class="sample project-item-image-container">
      <img src="assets/Nicole.jpg" alt=""/>
    </div>
    <!--END IMAGE CONTAINER-->

    <!-- CAPTION -->
    <div class="caption team-caption">
      <div class="transit-to-top">
        <h3 class="">Nicole Grieble </h3>

        <div class="widget_nav_menu">
          <ul class="social-top">
            <li><a href="https://www.facebook.com/ngrieble" title=""><i class="fa-icon-facebook"></i></a></li>
            <li><a href="https://www.twitter.com/ngrieble" title=""><i class="fa-icon-twitter"></i></a></li>
            <li><a href="https://github.com/ngrieble" title=""><i class="fa-icon-github-alt"></i></a></li>
            <!--<li><a href="#" title=""><i class="fa-icon-google-plus"></i></a></li>-->
            <li><a href="https://www.linkedin.com/pub/nicole-grieble/35/aa3/96" title=""><i class="fa-icon-linkedin"></i></a></li>
          </ul>


        </div>
      </div> <!--END CAPTION -->
    </div><!-- END: THUMBNAIL -->
  </div><!-- TEAM ITEM-->

  <!-- TEAM ITEM-->
  <div class="thumbnail span3">
    <!-- IMAGE CONTAINER-->
    <div class="sample project-item-image-container">
      <img src="assets/Sean.jpg" alt=""/>
    </div>
    <!--END IMAGE CONTAINER-->

    <!-- CAPTION -->
    <div class="caption team-caption">
      <div class="transit-to-top">
        <h3 class="">Sean Pradhan </h3>
        <div class="widget_nav_menu">
          <ul class="social-top">
            <li><a href="https://www.facebook.com/seanpradhan" title=""><i class="fa-icon-facebook"></i></a></li>
            <!--<li><a href="#" title=""><i class="fa-icon-twitter"></i></a></li>-->
            <li><a href="https://github.com/spradhan12" title=""><i class="fa-icon-github-alt"></i></a></li>
            <!--<li><a href="#" title=""><i class="fa-icon-google-plus"></i></a></li>-->
            <li><a href="www.linkedin.com/pub/sean-pradhan/4b/b1/6b9/" title=""><i class="fa-icon-linkedin"></i></a></li>
          </ul>
        </div>
      </div> <!--END CAPTION -->
    </div><!-- END: THUMBNAIL -->
  </div><!-- /TEAM ITEM-->

  <!-- TEAM ITEM-->
  <div class="thumbnail span3">
    <!-- IMAGE CONTAINER-->
    <div class="sample project-item-image-container">
      <img src="assets/Sravan.jpg" alt=""/>
    </div>
    <!--END IMAGE CONTAINER-->

    <!-- CAPTION -->
    <div class="caption team-caption">
      <div class="transit-to-top">
        <h3 class="">Sravan Rengarajan </h3>
        <div class="widget_nav_menu">
          <ul class="social-top">
            <li><a href="https://www.facebook.com/thekoolaidguy69" title=""><i class="fa-icon-facebook"></i></a></li>
            <!--<li><a href="#" title=""><i class="fa-icon-twitter"></i></a></li>-->
            <li><a href="https://github.com/srengarajan19" title=""><i class="fa-icon-github-alt"></i></a></li>
            <!--<li><a href="#" title=""><i class="fa-icon-google-plus"></i></a></li>-->
            <li><a href="www.linkedin.com/pub/sravan-rengarajan/35/238/222" title=""><i class="fa-icon-linkedin"></i></a></li>
          </ul>

        </div>
      </div> <!--END CAPTION -->
    </div><!-- END: THUMBNAIL -->
  </div><!--/ TEAM ITEM-->

  <!-- TEAM ITEM-->
  <div class="thumbnail span3">
    <!-- IMAGE CONTAINER-->
    <div class="sample project-item-image-container">
      <img src="assets/Max.jpg" alt=""/>
    </div>
    <!--END IMAGE CONTAINER-->

    <!-- CAPTION -->
    <div class="caption team-caption">
      <div class="transit-to-top">
        <h3 class="">Max Warner </h3>

        <div class="widget_nav_menu">
          <ul class="social-top">
            <li><a href="https://www.facebook.com/warnermc" title=""><i class="fa-icon-facebook"></i></a></li>

            <li><a href="https://twitter.com/MaxWarner7" title=""><i class="fa-icon-twitter"></i></a></li>

            <li><a href="https://github.com/warnermc" title=""><i class="fa-icon-github-alt"></i></a></li>

            <li><a href="https://www.linkedin.com/profile/view?id=280944270" title=""><i class="fa-icon-linkedin"></i></a></li>
          </ul>
        </div>
      </div> <!--END CAPTION -->
    </div><!-- END: THUMBNAIL -->
  </div><!-- /TEAM ITEM-->
</div>
<!--/ROW FLUID-->


<!-- DIVIDER -->
<!--<div class="row-fluid">-->
  <!--<div class="span12"><hr/></div>-->
<!--</div>-->

</div>

<!-- SKILLS ROW --
<div class="row-fluid skills-services">

  <!-- SERVICE SIDE--
  <div class="span6 wedo">
    <!-- INNER ROW--
    <div class="row-fluid">
      <h3 class="main-color">What We Can Do?</h3>
      <!-- SERVICE ITEM--
      <div class="hexicon-icon-wrap">
				<span class="">
					<i class="fa-icon-desktop fa-icon-large pull-left"></i>
				</span>
      </div>

      <h4>WEB &amp; UI DESIGN</h4>

      <p class="">
        There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour.
      </p>
      <!--/ SERVICE ITEM--
      <hr/>

      <!-- SERVICE ITEM--
      <div class="hexicon-icon-wrap">
				<span class="hexicon">
					<i class="fa-icon-picture fa-icon-large pull-left"></i>
				</span>
      </div>

      <h4>GRAPHICS DESIGN</h4>

      <p class="">
        There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour.
      </p>
      <!--/ SERVICE ITEM--
      <hr/>

      <!-- SERVICE ITEM--
      <div class="hexicon-icon-wrap">
				<span class="hexicon">
					<i class="fa-icon-cogs fa-icon-large pull-left"></i>
				</span>
      </div>

      <h4>PHP DEVELOPMENT</h4>

      <p class="">
        There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour.
      </p>
      <!--/ SERVICE ITEM--

      <!--/SPAN12 ITEM --
    </div><!-- ROW-FLUID--
  </div><!--/SPAN7-->

  <!-- SKILLS BAR SIDE--
  <div class="span6" id="showbar"><!-- DO NOT REMOVE id="showbar" - animated point event--

    <h3 class="main-color" >MAIN SKILLS</h3>
    <!-- BAR ITEM--
    <h4>DESIGN</h4>
    <div class="progress">
      <div class="bar notactive" style="width: 75%;"></div>
    </div>
    <!--/ BAR ITEM--

    <!-- BAR ITEM--
    <h4>HTML5</h4>
    <div class="progress">
      <div class="bar bar-danger notactive" style="width: 60%;"></div>
    </div>
    <!--/ BAR ITEM--

    <!-- BAR ITEM--
    <h4>CSS3</h4>
    <div class="progress">
      <div class="bar bar-success notactive" style="width: 55%;"></div>
    </div>
    <!--/ BAR ITEM-->

    <!-- BAR ITEM--
    <h4>JQUERY</h4>
    <div class="progress">
      <div class="bar bar-warning notactive" style="width: 75%;"></div>
    </div>
    <!--/ BAR ITEM-->

    <!-- BAR ITEM--
    <h4>PHP</h4>
    <div class="progress">
      <div class="bar bar-info notactive" style="width: 55%;"></div>
    </div>
    <!-- / BAR ITEM--

  </div>
  <!--/ SKILLS BAR SIDE--

</div>
<!-- / SKILLS ROW -->
<!-- / SERVICE SIDE-->

<!--/CONTAINER-->
</section>
<!-- /TEAM SECTION--

-->
<!-- ###################### FOOTER #######################
    ================================================== -->
<footer class="footer" id="contact-section">
  <div class="container">

    <!-- CONTACT HEADER-->
    <div class="">
      <div class="foothead">
        <div class="row-fluid">
          <div class="span12 page-header">
            <h3>CONTACT US <small class="visible-desktop">// Stay in touch with us</small></h3>
          </div>
        </div>
      </div>
    </div>
    <!--/ CONTAC HEADER-->

    <div class="row-fluid">

      <!--<div class="span3">-->
        <!--<h4 class="line3 center standart-h4title"><span>Navigation</span></h4>-->
        <!--<ul class="footer-links">-->
          <!--<li><a href="#">Home</a></li>-->
          <!--<li><a href="#">project</a></li>-->
          <!--<li><a href="#">Elements</a></li>-->
          <!--<li><a href="#">Contact</a></li>-->
          <!--<li><a href="#">Blog</a></li>-->
        <!--</ul>-->
      <!--</div>-->

      <!--<div class="span3">-->
        <!--<h4 class="line3 center standart-h4title"><span>Useful Links</span></h4>-->
        <!--<ul class="footer-links">-->
          <!--<li><a href="#">OnePager</a></li>-->
          <!--<li><a href="#">OnePager</a></li>-->
          <!--<li><a href="#">WordPress.com</a></li>-->
          <!--<li><a href="#">ThemeForest.net</a></li>-->
          <!--<li><a href="#">Free Vector Icons</a></li>-->
        <!--</ul>-->
      <!--</div>-->

      <div class="span3">
        <h4 class="line3 center standart-h4title"><span>Our Location</span></h4>
        <address>
          <strong>stalker.stats@umich.edu</strong><br>
          <i class="fa-icon-map-marker"></i>2609 Draper Dr<br>
          Ann Arbor, MI 48109<br>
          <i class="fa-icon-phone-sign"></i> + 4 (123) 456-7890
          <div class="foot-line"></div>
        </address>
      </div>

      <!--<div class="span3">-->
        <!--<h4> Lets connect</h4>-->
        <!--<ul class="social-top">-->
          <!--<li><a href="#" title=""><i class="fa-icon-facebook"></i></a></li>-->
          <!--<li><a href="#" title=""><i class="fa-icon-twitter"></i></a></li>-->
          <!--<li><a href="#" title=""><i class="fa-icon-github-alt"></i></a></li>-->
          <!--<li><a href="#" title=""><i class="fa-icon-google-plus"></i></a></li>-->
          <!--<li><a href="#" title=""><i class="fa-icon-linkedin"></i></a></li>-->
        <!--</ul>-->
      <!--</div>-->
    </div>
    <!-- ROW-FLUID-->
  </div>

  <!-- MAP DIV // !Don't remove this !Important -= gMap Script wrapper =- -->
  <!--<div id="map"></div>-->
  <!-- MAP DIV // !Don't remove this !Important -->

</footer>
<!-- END: FOOTER -->

</section>
</div>
<!-- END: MAIN-WRAPPER-->


<!-- Le javascript
    ================================================== -->
<!-- Placed at the end of the document so the pages load faster -->

<script src="assets/jquery.js" type="text/javascript"></script>
<script src="assets/google-code-prettify/prettify.js" type="text/javascript"></script>
<script src="assets/bootstrap-transition.js" type="text/javascript"></script>
<script src="assets/bootstrap-alert.js" type="text/javascript"></script>
<script src="assets/bootstrap-modal.js" type="text/javascript"></script>
<script src="assets/bootstrap-dropdown.js" type="text/javascript"></script>
<script src="assets/bootstrap-scrollspy.js" type="text/javascript"></script>
<script src="assets/bootstrap-tab.js" type="text/javascript"></script>
<script src="assets/bootstrap-tooltip.js" type="text/javascript"></script>
<script src="assets/bootstrap-popover.js" type="text/javascript"></script>
<script src="assets/bootstrap-button.js" type="text/javascript"></script>
<script src="assets/bootstrap-collapse.js" type="text/javascript"></script>
<script src="assets/bootstrap-carousel.js" type="text/javascript"></script>
<script src="assets/bootstrap-typeahead.js" type="text/javascript"></script>
<script src="assets/bootstrap-affix.js" type="text/javascript"></script>
<script src="assets/application.js" type="text/javascript"></script>
<script src="assets/jquery.easing.js" type="text/javascript" ></script>
<script src="assets/jquery.waitforimages.js" type="text/javascript" ></script>
<script src="assets/jquery.isotope.min.js" type="text/javascript" ></script>
<script src="assets/jquery.prettyPhoto-3.1.4-W3C.js" type="text/javascript"></script>
<script src="assets/jquery.ui.totop.js" type="text/javascript"></script>
<script type="text/javascript" src="assets//jquery.inview.js"></script>
<script src="assets/jquery.parallax-1.1.3.js" type="text/javascript" ></script>
<script src="assets/jquery.localscroll-1.2.7-min.js" type="text/javascript" ></script>
<script src="assets/jquery.scrollTo-1.4.2-min.js" type="text/javascript" ></script>

<!-- gMap PLUGIN -->
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="assets//jquery.gmap.js"></script>
<!-- gMap PLUGIN -->

<script type="text/javascript" src="assets//custom.js"></script>

</body>
</html>
